DB,Mode,sql,Rows,Min_ms,Max_ms,Avg_ms,Med_ms,query,rows
Postgres,ROUND_ROBIN,"SELECT id, crash_date, crash_time, borough, zip_code, latitude, longitude, location, on_street_name, cross_street_name, off_street_name, persons_injured, persons_killed, pedestrians_injured, pedestrians_killed, cyclists_injured, cyclists_killed, motorists_injured, motorists_killed, contributing_factor_1, contributing_factor_2, contributing_factor_3, contributing_factor_4, contributing_factor_5, vehicle_type_1, vehicle_type_2, vehicle_type_3, vehicle_type_4, vehicle_type_5, ROUND(latitude, 4) AS rounded_latitude, ROUND(longitude, 4) AS rounded_longitude, CASE WHEN persons_injured > 0 THEN 'Injured' ELSE 'No Injuries' END AS injury_status, LENGTH(location) AS location_length, LENGTH(on_street_name) AS on_street_name_length, LENGTH(cross_street_name) AS cross_street_name_length, UPPER(borough) AS upper_borough, CONCAT(on_street_name, ' & ', cross_street_name) AS street_intersection, SIN(RADIANS(latitude)) AS sin_latitude, COS(RADIANS(longitude)) AS cos_longitude FROM crash_data WHERE borough IN ('BROOKLYN', 'QUEENS', 'MANHATTAN', 'BRONX', 'STATEN ISLAND') AND crash_date BETWEEN '2015-01-01' AND '2025-12-31' AND persons_injured > 0 AND zip_code LIKE '1%' AND latitude BETWEEN 40.5 AND 41.5 AND longitude BETWEEN -74.5 AND -73.5 ORDER BY crash_date DESC, crash_time DESC, borough, zip_code;",160120,521,635,566.76,568.0,Extrem Complex Query,900000
Postgres,ROUND_ROBIN,"SELECT id, crash_date, crash_time, borough, zip_code, latitude, longitude, location, on_street_name, cross_street_name, off_street_name, persons_injured, persons_killed, pedestrians_injured, pedestrians_killed, cyclists_injured, cyclists_killed, motorists_injured, motorists_killed, contributing_factor_1, contributing_factor_2, contributing_factor_3, contributing_factor_4, contributing_factor_5, vehicle_type_1, vehicle_type_2, vehicle_type_3, vehicle_type_4, vehicle_type_5, ROUND(latitude, 4) AS rounded_latitude, ROUND(longitude, 4) AS rounded_longitude, CASE WHEN persons_injured > 0 THEN 'Injured' ELSE 'No Injuries' END AS injury_status, LENGTH(location) AS location_length, LENGTH(on_street_name) AS on_street_name_length, LENGTH(cross_street_name) AS cross_street_name_length, UPPER(borough) AS upper_borough, CONCAT(on_street_name, ' & ', cross_street_name) AS street_intersection, SIN(RADIANS(latitude)) AS sin_latitude, COS(RADIANS(longitude)) AS cos_longitude FROM crash_data WHERE borough IN ('BROOKLYN', 'QUEENS', 'MANHATTAN', 'BRONX', 'STATEN ISLAND') AND crash_date BETWEEN '2015-01-01' AND '2025-12-31' AND persons_injured > 0 AND zip_code LIKE '1%' AND latitude BETWEEN 40.5 AND 41.5 AND longitude BETWEEN -74.5 AND -73.5 ORDER BY crash_date DESC, crash_time DESC, borough, zip_code;",72911,234,316,258.88,254.0,Extrem Complex Query,300000
Postgres,ROUND_ROBIN,"SELECT id, crash_date, crash_time, borough, zip_code, latitude, longitude, location, on_street_name, cross_street_name, off_street_name, persons_injured, persons_killed, pedestrians_injured, pedestrians_killed, cyclists_injured, cyclists_killed, motorists_injured, motorists_killed, contributing_factor_1, contributing_factor_2, contributing_factor_3, contributing_factor_4, contributing_factor_5, vehicle_type_1, vehicle_type_2, vehicle_type_3, vehicle_type_4, vehicle_type_5, ROUND(latitude, 4) AS rounded_latitude, ROUND(longitude, 4) AS rounded_longitude, CASE WHEN persons_injured > 0 THEN 'Injured' ELSE 'No Injuries' END AS injury_status, LENGTH(location) AS location_length, LENGTH(on_street_name) AS on_street_name_length, LENGTH(cross_street_name) AS cross_street_name_length, UPPER(borough) AS upper_borough, CONCAT(on_street_name, ' & ', cross_street_name) AS street_intersection, SIN(RADIANS(latitude)) AS sin_latitude, COS(RADIANS(longitude)) AS cos_longitude FROM crash_data WHERE borough IN ('BROOKLYN', 'QUEENS', 'MANHATTAN', 'BRONX', 'STATEN ISLAND') AND crash_date BETWEEN '2015-01-01' AND '2025-12-31' AND persons_injured > 0 AND zip_code LIKE '1%' AND latitude BETWEEN 40.5 AND 41.5 AND longitude BETWEEN -74.5 AND -73.5 ORDER BY crash_date DESC, crash_time DESC, borough, zip_code;",22062,80,108,86.24,84.5,Extrem Complex Query,100000
Postgres,ROUND_ROBIN,"SELECT id, crash_date, crash_time, borough, zip_code, latitude, longitude, location, on_street_name, cross_street_name, off_street_name, persons_injured, persons_killed, pedestrians_injured, pedestrians_killed, cyclists_injured, cyclists_killed, motorists_injured, motorists_killed, contributing_factor_1, contributing_factor_2, contributing_factor_3, contributing_factor_4, contributing_factor_5, vehicle_type_1, vehicle_type_2, vehicle_type_3, vehicle_type_4, vehicle_type_5, ROUND(latitude, 4) AS rounded_latitude, ROUND(longitude, 4) AS rounded_longitude, CASE WHEN persons_injured > 0 THEN 'Injured' ELSE 'No Injuries' END AS injury_status, LENGTH(location) AS location_length, LENGTH(on_street_name) AS on_street_name_length, LENGTH(cross_street_name) AS cross_street_name_length, UPPER(borough) AS upper_borough, CONCAT(on_street_name, ' & ', cross_street_name) AS street_intersection, SIN(RADIANS(latitude)) AS sin_latitude, COS(RADIANS(longitude)) AS cos_longitude FROM crash_data WHERE borough IN ('BROOKLYN', 'QUEENS', 'MANHATTAN', 'BRONX', 'STATEN ISLAND') AND crash_date BETWEEN '2015-01-01' AND '2025-12-31' AND persons_injured > 0 AND zip_code LIKE '1%' AND latitude BETWEEN 40.5 AND 41.5 AND longitude BETWEEN -74.5 AND -73.5 ORDER BY crash_date DESC, crash_time DESC, borough, zip_code;",241315,777,957,872.06,871.0,Extrem Complex Query,1800000
