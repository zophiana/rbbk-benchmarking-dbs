DB,Mode,sql,runs,Rows,Min_ms,Max_ms,Avg_ms,Med_ms,query,rows
HSQLDB,SEQUENTIAL,SELECT * FROM crash_data WHERE id = 4455765;,50,1,0.0,3.0,0.14,0.0,Select by id,100000
HSQLDB,SEQUENTIAL,SELECT * FROM crash_data WHERE crash_date BETWEEN '2021-09-01' AND '2021-09-30';,50,9875,35.0,128.0,42.36,38.5,Date range,100000
HSQLDB,SEQUENTIAL,SELECT COUNT(id) AS total_crashes_2024 FROM crash_data WHERE EXTRACT(YEAR FROM crash_date) = 2024;,50,1,22.0,45.0,24.66,24.0,Count 2024,100000
HSQLDB,SEQUENTIAL,"SELECT borough, COUNT(id) AS total_crashes FROM crash_data GROUP BY borough ORDER BY total_crashes DESC;",50,6,23.0,47.0,26.06,25.0,Group by borough,100000
HSQLDB,SEQUENTIAL,"SELECT crash_time, COUNT(id) AS total_crashes FROM crash_data WHERE crash_time != '00:00:00' GROUP BY crash_time ORDER BY total_crashes DESC LIMIT 1;",50,1,41.0,48.0,44.08,44.0,Group by crash_time,100000
HSQLDB,SEQUENTIAL,"SELECT id, crash_date, crash_time, (SELECT COUNT(*) FROM crash_data) AS total_crashes_in_table FROM crash_data;",50,100000,47.0,89.0,50.54,49.0,Full table select,100000
HSQLDB,ROUND_ROBIN,SELECT * FROM crash_data WHERE id = 4455765;,50,1,0.0,0.0,0.0,0.0,Select by id,100000
HSQLDB,ROUND_ROBIN,SELECT * FROM crash_data WHERE crash_date BETWEEN '2021-09-01' AND '2021-09-30';,50,9875,36.0,43.0,37.96,38.0,Date range,100000
HSQLDB,ROUND_ROBIN,SELECT COUNT(id) AS total_crashes_2024 FROM crash_data WHERE EXTRACT(YEAR FROM crash_date) = 2024;,50,1,21.0,23.0,21.44,21.0,Count 2024,100000
HSQLDB,ROUND_ROBIN,"SELECT borough, COUNT(id) AS total_crashes FROM crash_data GROUP BY borough ORDER BY total_crashes DESC;",50,6,24.0,26.0,24.9,25.0,Group by borough,100000
HSQLDB,ROUND_ROBIN,"SELECT crash_time, COUNT(id) AS total_crashes FROM crash_data WHERE crash_time != '00:00:00' GROUP BY crash_time ORDER BY total_crashes DESC LIMIT 1;",50,1,43.0,48.0,44.94,45.0,Group by crash_time,100000
HSQLDB,ROUND_ROBIN,"SELECT id, crash_date, crash_time, (SELECT COUNT(*) FROM crash_data) AS total_crashes_in_table FROM crash_data;",50,100000,47.0,56.0,50.1,50.0,Full table select,100000
SQLite,SEQUENTIAL,SELECT * FROM crash_data WHERE id = 4455765;,50,1,0.0,1.0,0.02,0.0,Select by id,100000
SQLite,SEQUENTIAL,SELECT * FROM crash_data WHERE crash_date BETWEEN '2021-09-01' AND '2021-09-30';,50,0,9.0,11.0,9.4,9.0,Date range,100000
SQLite,SEQUENTIAL,"SELECT COUNT(id) AS total_crashes_2024 FROM crash_data WHERE strftime('%Y', crash_date) = '2024';",50,1,10.0,15.0,11.28,11.0,Count 2024,100000
SQLite,SEQUENTIAL,"SELECT borough, COUNT(id) AS total_crashes FROM crash_data GROUP BY borough ORDER BY total_crashes DESC;",50,6,45.0,50.0,46.66,46.0,Group by borough,100000
SQLite,SEQUENTIAL,"SELECT crash_time, COUNT(id) AS total_crashes FROM crash_data WHERE crash_time != '00:00:00' GROUP BY crash_time ORDER BY total_crashes DESC LIMIT 1;",50,1,38.0,52.0,41.32,39.0,Group by crash_time,100000
SQLite,SEQUENTIAL,"SELECT id, crash_date, crash_time, (SELECT COUNT(*) FROM crash_data) AS total_crashes_in_table FROM crash_data;",50,100000,21.0,23.0,21.74,22.0,Full table select,100000
SQLite,SEQUENTIAL,"SELECT borough, COUNT(id) AS total_crashes, (SELECT MAX(persons_injured) FROM crash_data c2 WHERE c2.borough = c1.borough ) AS max_injured, (SELECT MAX(crash_date) FROM crash_data c3 WHERE c3.borough = c1.borough ) AS most_recent_crash_date, (SELECT vehicle_type_1 FROM crash_data c4 WHERE c4.borough = c1.borough ORDER BY crash_date DESC LIMIT 1 ) AS most_recent_vehicle_type FROM crash_data c1 WHERE borough IS NOT NULL GROUP BY borough ORDER BY total_crashes DESC;",50,5,183.0,208.0,191.52,191.0,Group by borough,100000
SQLite,SEQUENTIAL,"SELECT id, crash_date, crash_time, borough, zip_code, latitude, longitude, location, on_street_name, cross_street_name, off_street_name, persons_injured, persons_killed, pedestrians_injured, pedestrians_killed, cyclists_injured, cyclists_killed, motorists_injured, motorists_killed, contributing_factor_1, contributing_factor_2, contributing_factor_3, contributing_factor_4, contributing_factor_5, vehicle_type_1, vehicle_type_2, vehicle_type_3, vehicle_type_4, vehicle_type_5, ROUND(latitude, 4) AS rounded_latitude, ROUND(longitude, 4) AS rounded_longitude, CASE WHEN persons_injured > 0 THEN 'Injured' ELSE 'No Injuries' END AS injury_status, LENGTH(location) AS location_length, LENGTH(on_street_name) AS on_street_name_length, LENGTH(cross_street_name) AS cross_street_name_length, UPPER(borough) AS upper_borough, CONCAT(on_street_name, ' & ', cross_street_name) AS street_intersection, SIN(RADIANS(latitude)) AS sin_latitude, COS(RADIANS(longitude)) AS cos_longitude FROM crash_data WHERE borough IN ('BROOKLYN', 'QUEENS', 'MANHATTAN', 'BRONX', 'STATEN ISLAND') AND crash_date BETWEEN '2015-01-01' AND '2025-12-31' AND persons_injured > 0 AND zip_code LIKE '1%' AND latitude BETWEEN 40.5 AND 41.5 AND longitude BETWEEN -74.5 AND -73.5 ORDER BY crash_date DESC, crash_time DESC, borough, zip_code;",50,0,14.0,16.0,15.04,15.0,Other,100000
SQLite,ROUND_ROBIN,SELECT * FROM crash_data WHERE id = 4455765;,50,1,0.0,0.0,0.0,0.0,Select by id,100000
SQLite,ROUND_ROBIN,SELECT * FROM crash_data WHERE crash_date BETWEEN '2021-09-01' AND '2021-09-30';,50,0,9.0,10.0,9.02,9.0,Date range,100000
SQLite,ROUND_ROBIN,"SELECT COUNT(id) AS total_crashes_2024 FROM crash_data WHERE strftime('%Y', crash_date) = '2024';",50,1,10.0,11.0,10.06,10.0,Count 2024,100000
SQLite,ROUND_ROBIN,"SELECT borough, COUNT(id) AS total_crashes FROM crash_data GROUP BY borough ORDER BY total_crashes DESC;",50,6,44.0,47.0,45.04,45.0,Group by borough,100000
SQLite,ROUND_ROBIN,"SELECT crash_time, COUNT(id) AS total_crashes FROM crash_data WHERE crash_time != '00:00:00' GROUP BY crash_time ORDER BY total_crashes DESC LIMIT 1;",50,1,38.0,40.0,38.88,39.0,Group by crash_time,100000
SQLite,ROUND_ROBIN,"SELECT id, crash_date, crash_time, (SELECT COUNT(*) FROM crash_data) AS total_crashes_in_table FROM crash_data;",50,100000,17.0,19.0,17.28,17.0,Full table select,100000
SQLite,ROUND_ROBIN,"SELECT borough, COUNT(id) AS total_crashes, (SELECT MAX(persons_injured) FROM crash_data c2 WHERE c2.borough = c1.borough ) AS max_injured, (SELECT MAX(crash_date) FROM crash_data c3 WHERE c3.borough = c1.borough ) AS most_recent_crash_date, (SELECT vehicle_type_1 FROM crash_data c4 WHERE c4.borough = c1.borough ORDER BY crash_date DESC LIMIT 1 ) AS most_recent_vehicle_type FROM crash_data c1 WHERE borough IS NOT NULL GROUP BY borough ORDER BY total_crashes DESC;",50,5,183.0,190.0,185.94,186.0,Group by borough,100000
SQLite,ROUND_ROBIN,"SELECT id, crash_date, crash_time, borough, zip_code, latitude, longitude, location, on_street_name, cross_street_name, off_street_name, persons_injured, persons_killed, pedestrians_injured, pedestrians_killed, cyclists_injured, cyclists_killed, motorists_injured, motorists_killed, contributing_factor_1, contributing_factor_2, contributing_factor_3, contributing_factor_4, contributing_factor_5, vehicle_type_1, vehicle_type_2, vehicle_type_3, vehicle_type_4, vehicle_type_5, ROUND(latitude, 4) AS rounded_latitude, ROUND(longitude, 4) AS rounded_longitude, CASE WHEN persons_injured > 0 THEN 'Injured' ELSE 'No Injuries' END AS injury_status, LENGTH(location) AS location_length, LENGTH(on_street_name) AS on_street_name_length, LENGTH(cross_street_name) AS cross_street_name_length, UPPER(borough) AS upper_borough, CONCAT(on_street_name, ' & ', cross_street_name) AS street_intersection, SIN(RADIANS(latitude)) AS sin_latitude, COS(RADIANS(longitude)) AS cos_longitude FROM crash_data WHERE borough IN ('BROOKLYN', 'QUEENS', 'MANHATTAN', 'BRONX', 'STATEN ISLAND') AND crash_date BETWEEN '2015-01-01' AND '2025-12-31' AND persons_injured > 0 AND zip_code LIKE '1%' AND latitude BETWEEN 40.5 AND 41.5 AND longitude BETWEEN -74.5 AND -73.5 ORDER BY crash_date DESC, crash_time DESC, borough, zip_code;",50,0,14.0,15.0,14.3,14.0,Other,100000
Postgres,SEQUENTIAL,SELECT * FROM crash_data WHERE id = 4455765;,50,1,0.0,9.0,0.18,0.0,Select by id,100000
Postgres,SEQUENTIAL,SELECT * FROM crash_data WHERE crash_date BETWEEN '2021-09-01' AND '2021-09-30';,50,9875,23.0,38.0,25.14,25.0,Date range,100000
Postgres,SEQUENTIAL,SELECT COUNT(id) AS total_crashes_2024 FROM crash_data WHERE EXTRACT(YEAR FROM crash_date) = 2024;,50,1,13.0,21.0,14.7,15.0,Count 2024,100000
Postgres,SEQUENTIAL,"SELECT borough, COUNT(id) AS total_crashes FROM crash_data GROUP BY borough ORDER BY total_crashes DESC;",50,6,13.0,17.0,14.24,14.0,Group by borough,100000
Postgres,SEQUENTIAL,"SELECT crash_time, COUNT(id) AS total_crashes FROM crash_data WHERE crash_time != '00:00:00' GROUP BY crash_time ORDER BY total_crashes DESC LIMIT 1;",50,1,15.0,26.0,16.86,17.0,Group by crash_time,100000
Postgres,SEQUENTIAL,"SELECT id, crash_date, crash_time, (SELECT COUNT(*) FROM crash_data) AS total_crashes_in_table FROM crash_data;",50,100000,38.0,45.0,39.74,39.0,Full table select,100000
Postgres,SEQUENTIAL,"SELECT borough, COUNT(id) AS total_crashes, (SELECT MAX(persons_injured) FROM crash_data c2 WHERE c2.borough = c1.borough ) AS max_injured, (SELECT MAX(crash_date) FROM crash_data c3 WHERE c3.borough = c1.borough ) AS most_recent_crash_date, (SELECT vehicle_type_1 FROM crash_data c4 WHERE c4.borough = c1.borough ORDER BY crash_date DESC LIMIT 1 ) AS most_recent_vehicle_type FROM crash_data c1 WHERE borough IS NOT NULL GROUP BY borough ORDER BY total_crashes DESC;",50,5,133.0,175.0,145.4,142.0,Group by borough,100000
Postgres,SEQUENTIAL,"SELECT id, crash_date, crash_time, borough, zip_code, latitude, longitude, location, on_street_name, cross_street_name, off_street_name, persons_injured, persons_killed, pedestrians_injured, pedestrians_killed, cyclists_injured, cyclists_killed, motorists_injured, motorists_killed, contributing_factor_1, contributing_factor_2, contributing_factor_3, contributing_factor_4, contributing_factor_5, vehicle_type_1, vehicle_type_2, vehicle_type_3, vehicle_type_4, vehicle_type_5, ROUND(latitude, 4) AS rounded_latitude, ROUND(longitude, 4) AS rounded_longitude, CASE WHEN persons_injured > 0 THEN 'Injured' ELSE 'No Injuries' END AS injury_status, LENGTH(location) AS location_length, LENGTH(on_street_name) AS on_street_name_length, LENGTH(cross_street_name) AS cross_street_name_length, UPPER(borough) AS upper_borough, CONCAT(on_street_name, ' & ', cross_street_name) AS street_intersection, SIN(RADIANS(latitude)) AS sin_latitude, COS(RADIANS(longitude)) AS cos_longitude FROM crash_data WHERE borough IN ('BROOKLYN', 'QUEENS', 'MANHATTAN', 'BRONX', 'STATEN ISLAND') AND crash_date BETWEEN '2015-01-01' AND '2025-12-31' AND persons_injured > 0 AND zip_code LIKE '1%' AND latitude BETWEEN 40.5 AND 41.5 AND longitude BETWEEN -74.5 AND -73.5 ORDER BY crash_date DESC, crash_time DESC, borough, zip_code;",50,22062,78.0,111.0,89.44,87.0,Other,100000
Postgres,ROUND_ROBIN,SELECT * FROM crash_data WHERE id = 4455765;,50,1,0.0,1.0,0.02,0.0,Select by id,100000
Postgres,ROUND_ROBIN,SELECT * FROM crash_data WHERE crash_date BETWEEN '2021-09-01' AND '2021-09-30';,50,9875,23.0,29.0,25.14,25.0,Date range,100000
Postgres,ROUND_ROBIN,SELECT COUNT(id) AS total_crashes_2024 FROM crash_data WHERE EXTRACT(YEAR FROM crash_date) = 2024;,50,1,15.0,17.0,15.2,15.0,Count 2024,100000
Postgres,ROUND_ROBIN,"SELECT borough, COUNT(id) AS total_crashes FROM crash_data GROUP BY borough ORDER BY total_crashes DESC;",50,6,14.0,17.0,14.48,14.0,Group by borough,100000
Postgres,ROUND_ROBIN,"SELECT crash_time, COUNT(id) AS total_crashes FROM crash_data WHERE crash_time != '00:00:00' GROUP BY crash_time ORDER BY total_crashes DESC LIMIT 1;",50,1,16.0,19.0,16.44,16.0,Group by crash_time,100000
Postgres,ROUND_ROBIN,"SELECT id, crash_date, crash_time, (SELECT COUNT(*) FROM crash_data) AS total_crashes_in_table FROM crash_data;",50,100000,38.0,49.0,39.38,38.0,Full table select,100000
Postgres,ROUND_ROBIN,"SELECT borough, COUNT(id) AS total_crashes, (SELECT MAX(persons_injured) FROM crash_data c2 WHERE c2.borough = c1.borough ) AS max_injured, (SELECT MAX(crash_date) FROM crash_data c3 WHERE c3.borough = c1.borough ) AS most_recent_crash_date, (SELECT vehicle_type_1 FROM crash_data c4 WHERE c4.borough = c1.borough ORDER BY crash_date DESC LIMIT 1 ) AS most_recent_vehicle_type FROM crash_data c1 WHERE borough IS NOT NULL GROUP BY borough ORDER BY total_crashes DESC;",50,5,137.0,164.0,144.52,144.0,Group by borough,100000
Postgres,ROUND_ROBIN,"SELECT id, crash_date, crash_time, borough, zip_code, latitude, longitude, location, on_street_name, cross_street_name, off_street_name, persons_injured, persons_killed, pedestrians_injured, pedestrians_killed, cyclists_injured, cyclists_killed, motorists_injured, motorists_killed, contributing_factor_1, contributing_factor_2, contributing_factor_3, contributing_factor_4, contributing_factor_5, vehicle_type_1, vehicle_type_2, vehicle_type_3, vehicle_type_4, vehicle_type_5, ROUND(latitude, 4) AS rounded_latitude, ROUND(longitude, 4) AS rounded_longitude, CASE WHEN persons_injured > 0 THEN 'Injured' ELSE 'No Injuries' END AS injury_status, LENGTH(location) AS location_length, LENGTH(on_street_name) AS on_street_name_length, LENGTH(cross_street_name) AS cross_street_name_length, UPPER(borough) AS upper_borough, CONCAT(on_street_name, ' & ', cross_street_name) AS street_intersection, SIN(RADIANS(latitude)) AS sin_latitude, COS(RADIANS(longitude)) AS cos_longitude FROM crash_data WHERE borough IN ('BROOKLYN', 'QUEENS', 'MANHATTAN', 'BRONX', 'STATEN ISLAND') AND crash_date BETWEEN '2015-01-01' AND '2025-12-31' AND persons_injured > 0 AND zip_code LIKE '1%' AND latitude BETWEEN 40.5 AND 41.5 AND longitude BETWEEN -74.5 AND -73.5 ORDER BY crash_date DESC, crash_time DESC, borough, zip_code;",50,22062,80.0,108.0,86.24,84.5,Other,100000
