INFO: ===== Benchmarking HSQLDB =====
INFO: ===== Benchmarking Mode: SEQUENTIAL =====
INFO: [HSQLDB] SQL: "SELECT *
  FROM crash_data
 WHERE id = 4455765;
"
INFO: [HSQLDB] Runs: 50
INFO: [HSQLDB] Timeouts: 0
INFO: [HSQLDB] Rows returned: 1
INFO: [HSQLDB] First run: 0ms
INFO: [HSQLDB] Last run: 3ms
INFO: [HSQLDB] Min time: 0ms
INFO: [HSQLDB] Max time: 3ms
INFO: [HSQLDB] Avg time: 0,14ms
INFO: [HSQLDB] Median: 0,00ms

INFO: [HSQLDB] SQL: "SELECT *
  FROM crash_data
 WHERE crash_date BETWEEN '2021-09-01' AND '2021-09-30';
"
INFO: [HSQLDB] Runs: 50
INFO: [HSQLDB] Timeouts: 0
INFO: [HSQLDB] Rows returned: 9875
INFO: [HSQLDB] First run: 35ms
INFO: [HSQLDB] Last run: 128ms
INFO: [HSQLDB] Min time: 35ms
INFO: [HSQLDB] Max time: 128ms
INFO: [HSQLDB] Avg time: 42,36ms
INFO: [HSQLDB] Median: 38,50ms

INFO: [HSQLDB] SQL: "SELECT
    COUNT(id) AS total_crashes_2024
FROM crash_data
WHERE EXTRACT(YEAR FROM crash_date) = 2024;
"
INFO: [HSQLDB] Runs: 50
INFO: [HSQLDB] Timeouts: 0
INFO: [HSQLDB] Rows returned: 1
INFO: [HSQLDB] First run: 22ms
INFO: [HSQLDB] Last run: 45ms
INFO: [HSQLDB] Min time: 22ms
INFO: [HSQLDB] Max time: 45ms
INFO: [HSQLDB] Avg time: 24,66ms
INFO: [HSQLDB] Median: 24,00ms

INFO: [HSQLDB] SQL: "SELECT
    borough,
    COUNT(id) AS total_crashes
FROM crash_data
GROUP BY borough
ORDER BY total_crashes DESC;
"
INFO: [HSQLDB] Runs: 50
INFO: [HSQLDB] Timeouts: 0
INFO: [HSQLDB] Rows returned: 6
INFO: [HSQLDB] First run: 23ms
INFO: [HSQLDB] Last run: 47ms
INFO: [HSQLDB] Min time: 23ms
INFO: [HSQLDB] Max time: 47ms
INFO: [HSQLDB] Avg time: 26,06ms
INFO: [HSQLDB] Median: 25,00ms

INFO: [HSQLDB] SQL: "SELECT
    crash_time,
    COUNT(id) AS total_crashes
FROM crash_data
WHERE crash_time != '00:00:00'
GROUP BY crash_time
ORDER BY total_crashes DESC
LIMIT 1;
"
INFO: [HSQLDB] Runs: 50
INFO: [HSQLDB] Timeouts: 0
INFO: [HSQLDB] Rows returned: 1
INFO: [HSQLDB] First run: 41ms
INFO: [HSQLDB] Last run: 48ms
INFO: [HSQLDB] Min time: 41ms
INFO: [HSQLDB] Max time: 48ms
INFO: [HSQLDB] Avg time: 44,08ms
INFO: [HSQLDB] Median: 44,00ms

INFO: [HSQLDB] SQL: "SELECT
    id,
    crash_date,
    crash_time,
    (SELECT COUNT(*) FROM crash_data) AS total_crashes_in_table
FROM crash_data;
"
INFO: [HSQLDB] Runs: 50
INFO: [HSQLDB] Timeouts: 0
INFO: [HSQLDB] Rows returned: 100000
INFO: [HSQLDB] First run: 47ms
INFO: [HSQLDB] Last run: 89ms
INFO: [HSQLDB] Min time: 47ms
INFO: [HSQLDB] Max time: 89ms
INFO: [HSQLDB] Avg time: 50,54ms
INFO: [HSQLDB] Median: 49,00ms

INFO: ===== Benchmarking HSQLDB =====
INFO: ===== Benchmarking Mode: ROUND_ROBIN =====
INFO: [HSQLDB] SQL: "SELECT *
  FROM crash_data
 WHERE id = 4455765;
"
INFO: [HSQLDB] Runs: 50
INFO: [HSQLDB] Timeouts: 0
INFO: [HSQLDB] Rows returned: 1
INFO: [HSQLDB] First run: 0ms
INFO: [HSQLDB] Last run: 0ms
INFO: [HSQLDB] Min time: 0ms
INFO: [HSQLDB] Max time: 0ms
INFO: [HSQLDB] Avg time: 0,00ms
INFO: [HSQLDB] Median: 0,00ms

INFO: [HSQLDB] SQL: "SELECT *
  FROM crash_data
 WHERE crash_date BETWEEN '2021-09-01' AND '2021-09-30';
"
INFO: [HSQLDB] Runs: 50
INFO: [HSQLDB] Timeouts: 0
INFO: [HSQLDB] Rows returned: 9875
INFO: [HSQLDB] First run: 36ms
INFO: [HSQLDB] Last run: 43ms
INFO: [HSQLDB] Min time: 36ms
INFO: [HSQLDB] Max time: 43ms
INFO: [HSQLDB] Avg time: 37,96ms
INFO: [HSQLDB] Median: 38,00ms

INFO: [HSQLDB] SQL: "SELECT
    COUNT(id) AS total_crashes_2024
FROM crash_data
WHERE EXTRACT(YEAR FROM crash_date) = 2024;
"
INFO: [HSQLDB] Runs: 50
INFO: [HSQLDB] Timeouts: 0
INFO: [HSQLDB] Rows returned: 1
INFO: [HSQLDB] First run: 21ms
INFO: [HSQLDB] Last run: 23ms
INFO: [HSQLDB] Min time: 21ms
INFO: [HSQLDB] Max time: 23ms
INFO: [HSQLDB] Avg time: 21,44ms
INFO: [HSQLDB] Median: 21,00ms

INFO: [HSQLDB] SQL: "SELECT
    borough,
    COUNT(id) AS total_crashes
FROM crash_data
GROUP BY borough
ORDER BY total_crashes DESC;
"
INFO: [HSQLDB] Runs: 50
INFO: [HSQLDB] Timeouts: 0
INFO: [HSQLDB] Rows returned: 6
INFO: [HSQLDB] First run: 24ms
INFO: [HSQLDB] Last run: 26ms
INFO: [HSQLDB] Min time: 24ms
INFO: [HSQLDB] Max time: 26ms
INFO: [HSQLDB] Avg time: 24,90ms
INFO: [HSQLDB] Median: 25,00ms

INFO: [HSQLDB] SQL: "SELECT
    crash_time,
    COUNT(id) AS total_crashes
FROM crash_data
WHERE crash_time != '00:00:00'
GROUP BY crash_time
ORDER BY total_crashes DESC
LIMIT 1;
"
INFO: [HSQLDB] Runs: 50
INFO: [HSQLDB] Timeouts: 0
INFO: [HSQLDB] Rows returned: 1
INFO: [HSQLDB] First run: 43ms
INFO: [HSQLDB] Last run: 48ms
INFO: [HSQLDB] Min time: 43ms
INFO: [HSQLDB] Max time: 48ms
INFO: [HSQLDB] Avg time: 44,94ms
INFO: [HSQLDB] Median: 45,00ms

INFO: [HSQLDB] SQL: "SELECT
    id,
    crash_date,
    crash_time,
    (SELECT COUNT(*) FROM crash_data) AS total_crashes_in_table
FROM crash_data;
"
INFO: [HSQLDB] Runs: 50
INFO: [HSQLDB] Timeouts: 0
INFO: [HSQLDB] Rows returned: 100000
INFO: [HSQLDB] First run: 47ms
INFO: [HSQLDB] Last run: 56ms
INFO: [HSQLDB] Min time: 47ms
INFO: [HSQLDB] Max time: 56ms
INFO: [HSQLDB] Avg time: 50,10ms
INFO: [HSQLDB] Median: 50,00ms

INFO: ===== Benchmarking HSQLDB =====
INFO: ===== Benchmarking Mode: SEQUENTIAL =====
INFO: [HSQLDB] SQL: "SELECT *
  FROM crash_data
 WHERE id = 4455765;
"
INFO: [HSQLDB] Runs: 50
INFO: [HSQLDB] Timeouts: 0
INFO: [HSQLDB] Rows returned: 1
INFO: [HSQLDB] First run: 0ms
INFO: [HSQLDB] Last run: 0ms
INFO: [HSQLDB] Min time: 0ms
INFO: [HSQLDB] Max time: 0ms
INFO: [HSQLDB] Avg time: 0,00ms
INFO: [HSQLDB] Median: 0,00ms

INFO: [HSQLDB] SQL: "SELECT *
  FROM crash_data
 WHERE crash_date BETWEEN '2021-09-01' AND '2021-09-30';
"
INFO: [HSQLDB] Runs: 50
INFO: [HSQLDB] Timeouts: 0
INFO: [HSQLDB] Rows returned: 9896
INFO: [HSQLDB] First run: 72ms
INFO: [HSQLDB] Last run: 125ms
INFO: [HSQLDB] Min time: 72ms
INFO: [HSQLDB] Max time: 125ms
INFO: [HSQLDB] Avg time: 79,50ms
INFO: [HSQLDB] Median: 76,00ms

INFO: [HSQLDB] SQL: "SELECT
    COUNT(id) AS total_crashes_2024
FROM crash_data
WHERE EXTRACT(YEAR FROM crash_date) = 2024;
"
INFO: [HSQLDB] Runs: 50
INFO: [HSQLDB] Timeouts: 0
INFO: [HSQLDB] Rows returned: 1
INFO: [HSQLDB] First run: 63ms
INFO: [HSQLDB] Last run: 69ms
INFO: [HSQLDB] Min time: 63ms
INFO: [HSQLDB] Max time: 69ms
INFO: [HSQLDB] Avg time: 65,42ms
INFO: [HSQLDB] Median: 66,00ms

INFO: [HSQLDB] SQL: "SELECT
    borough,
    COUNT(id) AS total_crashes
FROM crash_data
GROUP BY borough
ORDER BY total_crashes DESC;
"
INFO: [HSQLDB] Runs: 50
INFO: [HSQLDB] Timeouts: 0
INFO: [HSQLDB] Rows returned: 6
INFO: [HSQLDB] First run: 68ms
INFO: [HSQLDB] Last run: 73ms
INFO: [HSQLDB] Min time: 68ms
INFO: [HSQLDB] Max time: 73ms
INFO: [HSQLDB] Avg time: 69,98ms
INFO: [HSQLDB] Median: 70,00ms

INFO: [HSQLDB] SQL: "SELECT
    crash_time,
    COUNT(id) AS total_crashes
FROM crash_data
WHERE crash_time != '00:00:00'
GROUP BY crash_time
ORDER BY total_crashes DESC
LIMIT 1;
"
INFO: [HSQLDB] Runs: 50
INFO: [HSQLDB] Timeouts: 0
INFO: [HSQLDB] Rows returned: 1
INFO: [HSQLDB] First run: 134ms
INFO: [HSQLDB] Last run: 142ms
INFO: [HSQLDB] Min time: 134ms
INFO: [HSQLDB] Max time: 142ms
INFO: [HSQLDB] Avg time: 136,44ms
INFO: [HSQLDB] Median: 136,00ms

INFO: [HSQLDB] SQL: "SELECT
    id,
    crash_date,
    crash_time,
    (SELECT COUNT(*) FROM crash_data) AS total_crashes_in_table
FROM crash_data;
"
INFO: [HSQLDB] Runs: 50
INFO: [HSQLDB] Timeouts: 0
INFO: [HSQLDB] Rows returned: 300000
INFO: [HSQLDB] First run: 145ms
INFO: [HSQLDB] Last run: 235ms
INFO: [HSQLDB] Min time: 145ms
INFO: [HSQLDB] Max time: 235ms
INFO: [HSQLDB] Avg time: 175,82ms
INFO: [HSQLDB] Median: 170,50ms

INFO: ===== Benchmarking HSQLDB =====
INFO: ===== Benchmarking Mode: ROUND_ROBIN =====
INFO: [HSQLDB] SQL: "SELECT *
  FROM crash_data
 WHERE id = 4455765;
"
INFO: [HSQLDB] Runs: 50
INFO: [HSQLDB] Timeouts: 0
INFO: [HSQLDB] Rows returned: 1
INFO: [HSQLDB] First run: 0ms
INFO: [HSQLDB] Last run: 0ms
INFO: [HSQLDB] Min time: 0ms
INFO: [HSQLDB] Max time: 0ms
INFO: [HSQLDB] Avg time: 0,00ms
INFO: [HSQLDB] Median: 0,00ms

INFO: [HSQLDB] SQL: "SELECT *
  FROM crash_data
 WHERE crash_date BETWEEN '2021-09-01' AND '2021-09-30';
"
INFO: [HSQLDB] Runs: 50
INFO: [HSQLDB] Timeouts: 0
INFO: [HSQLDB] Rows returned: 9896
INFO: [HSQLDB] First run: 70ms
INFO: [HSQLDB] Last run: 114ms
INFO: [HSQLDB] Min time: 70ms
INFO: [HSQLDB] Max time: 114ms
INFO: [HSQLDB] Avg time: 81,10ms
INFO: [HSQLDB] Median: 80,00ms

INFO: [HSQLDB] SQL: "SELECT
    COUNT(id) AS total_crashes_2024
FROM crash_data
WHERE EXTRACT(YEAR FROM crash_date) = 2024;
"
INFO: [HSQLDB] Runs: 50
INFO: [HSQLDB] Timeouts: 0
INFO: [HSQLDB] Rows returned: 1
INFO: [HSQLDB] First run: 64ms
INFO: [HSQLDB] Last run: 117ms
INFO: [HSQLDB] Min time: 64ms
INFO: [HSQLDB] Max time: 117ms
INFO: [HSQLDB] Avg time: 67,08ms
INFO: [HSQLDB] Median: 66,00ms

INFO: [HSQLDB] SQL: "SELECT
    borough,
    COUNT(id) AS total_crashes
FROM crash_data
GROUP BY borough
ORDER BY total_crashes DESC;
"
INFO: [HSQLDB] Runs: 50
INFO: [HSQLDB] Timeouts: 0
INFO: [HSQLDB] Rows returned: 6
INFO: [HSQLDB] First run: 69ms
INFO: [HSQLDB] Last run: 123ms
INFO: [HSQLDB] Min time: 69ms
INFO: [HSQLDB] Max time: 123ms
INFO: [HSQLDB] Avg time: 73,54ms
INFO: [HSQLDB] Median: 71,00ms

INFO: [HSQLDB] SQL: "SELECT
    crash_time,
    COUNT(id) AS total_crashes
FROM crash_data
WHERE crash_time != '00:00:00'
GROUP BY crash_time
ORDER BY total_crashes DESC
LIMIT 1;
"
INFO: [HSQLDB] Runs: 50
INFO: [HSQLDB] Timeouts: 0
INFO: [HSQLDB] Rows returned: 1
INFO: [HSQLDB] First run: 132ms
INFO: [HSQLDB] Last run: 158ms
INFO: [HSQLDB] Min time: 132ms
INFO: [HSQLDB] Max time: 158ms
INFO: [HSQLDB] Avg time: 136,96ms
INFO: [HSQLDB] Median: 136,00ms

INFO: [HSQLDB] SQL: "SELECT
    id,
    crash_date,
    crash_time,
    (SELECT COUNT(*) FROM crash_data) AS total_crashes_in_table
FROM crash_data;
"
INFO: [HSQLDB] Runs: 50
INFO: [HSQLDB] Timeouts: 0
INFO: [HSQLDB] Rows returned: 300000
INFO: [HSQLDB] First run: 148ms
INFO: [HSQLDB] Last run: 193ms
INFO: [HSQLDB] Min time: 148ms
INFO: [HSQLDB] Max time: 193ms
INFO: [HSQLDB] Avg time: 161,54ms
INFO: [HSQLDB] Median: 157,00ms

INFO: ===== Benchmarking HSQLDB =====
INFO: ===== Benchmarking Mode: SEQUENTIAL =====
INFO: [HSQLDB] SQL: "SELECT *
  FROM crash_data
 WHERE id = 4455765;
"
INFO: [HSQLDB] Runs: 50
INFO: [HSQLDB] Timeouts: 0
INFO: [HSQLDB] Rows returned: 1
INFO: [HSQLDB] First run: 0ms
INFO: [HSQLDB] Last run: 0ms
INFO: [HSQLDB] Min time: 0ms
INFO: [HSQLDB] Max time: 0ms
INFO: [HSQLDB] Avg time: 0,00ms
INFO: [HSQLDB] Median: 0,00ms

INFO: [HSQLDB] SQL: "SELECT *
  FROM crash_data
 WHERE crash_date BETWEEN '2021-09-01' AND '2021-09-30';
"
INFO: [HSQLDB] Runs: 50
INFO: [HSQLDB] Timeouts: 0
INFO: [HSQLDB] Rows returned: 9896
INFO: [HSQLDB] First run: 167ms
INFO: [HSQLDB] Last run: 247ms
INFO: [HSQLDB] Min time: 167ms
INFO: [HSQLDB] Max time: 247ms
INFO: [HSQLDB] Avg time: 178,08ms
INFO: [HSQLDB] Median: 177,00ms

INFO: [HSQLDB] SQL: "SELECT
    COUNT(id) AS total_crashes_2024
FROM crash_data
WHERE EXTRACT(YEAR FROM crash_date) = 2024;
"
INFO: [HSQLDB] Runs: 50
INFO: [HSQLDB] Timeouts: 0
INFO: [HSQLDB] Rows returned: 1
INFO: [HSQLDB] First run: 196ms
INFO: [HSQLDB] Last run: 204ms
INFO: [HSQLDB] Min time: 196ms
INFO: [HSQLDB] Max time: 204ms
INFO: [HSQLDB] Avg time: 198,28ms
INFO: [HSQLDB] Median: 197,00ms

INFO: [HSQLDB] SQL: "SELECT
    borough,
    COUNT(id) AS total_crashes
FROM crash_data
GROUP BY borough
ORDER BY total_crashes DESC;
"
INFO: [HSQLDB] Runs: 50
INFO: [HSQLDB] Timeouts: 0
INFO: [HSQLDB] Rows returned: 6
INFO: [HSQLDB] First run: 208ms
INFO: [HSQLDB] Last run: 220ms
INFO: [HSQLDB] Min time: 208ms
INFO: [HSQLDB] Max time: 220ms
INFO: [HSQLDB] Avg time: 214,76ms
INFO: [HSQLDB] Median: 214,00ms

INFO: [HSQLDB] SQL: "SELECT
    crash_time,
    COUNT(id) AS total_crashes
FROM crash_data
WHERE crash_time != '00:00:00'
GROUP BY crash_time
ORDER BY total_crashes DESC
LIMIT 1;
"
INFO: [HSQLDB] Runs: 50
INFO: [HSQLDB] Timeouts: 0
INFO: [HSQLDB] Rows returned: 1
INFO: [HSQLDB] First run: 382ms
INFO: [HSQLDB] Last run: 415ms
INFO: [HSQLDB] Min time: 382ms
INFO: [HSQLDB] Max time: 415ms
INFO: [HSQLDB] Avg time: 394,74ms
INFO: [HSQLDB] Median: 393,00ms

INFO: [HSQLDB] SQL: "SELECT
    id,
    crash_date,
    crash_time,
    (SELECT COUNT(*) FROM crash_data) AS total_crashes_in_table
FROM crash_data;
"
INFO: [HSQLDB] Runs: 50
INFO: [HSQLDB] Timeouts: 0
INFO: [HSQLDB] Rows returned: 900000
INFO: [HSQLDB] First run: 424ms
INFO: [HSQLDB] Last run: 629ms
INFO: [HSQLDB] Min time: 424ms
INFO: [HSQLDB] Max time: 629ms
INFO: [HSQLDB] Avg time: 480,30ms
INFO: [HSQLDB] Median: 469,00ms

INFO: ===== Benchmarking HSQLDB =====
INFO: ===== Benchmarking Mode: ROUND_ROBIN =====
INFO: [HSQLDB] SQL: "SELECT *
  FROM crash_data
 WHERE id = 4455765;
"
INFO: [HSQLDB] Runs: 50
INFO: [HSQLDB] Timeouts: 0
INFO: [HSQLDB] Rows returned: 1
INFO: [HSQLDB] First run: 0ms
INFO: [HSQLDB] Last run: 0ms
INFO: [HSQLDB] Min time: 0ms
INFO: [HSQLDB] Max time: 0ms
INFO: [HSQLDB] Avg time: 0,00ms
INFO: [HSQLDB] Median: 0,00ms

INFO: [HSQLDB] SQL: "SELECT *
  FROM crash_data
 WHERE crash_date BETWEEN '2021-09-01' AND '2021-09-30';
"
INFO: [HSQLDB] Runs: 50
INFO: [HSQLDB] Timeouts: 0
INFO: [HSQLDB] Rows returned: 9896
INFO: [HSQLDB] First run: 159ms
INFO: [HSQLDB] Last run: 206ms
INFO: [HSQLDB] Min time: 159ms
INFO: [HSQLDB] Max time: 206ms
INFO: [HSQLDB] Avg time: 175,60ms
INFO: [HSQLDB] Median: 173,50ms

INFO: [HSQLDB] SQL: "SELECT
    COUNT(id) AS total_crashes_2024
FROM crash_data
WHERE EXTRACT(YEAR FROM crash_date) = 2024;
"
INFO: [HSQLDB] Runs: 50
INFO: [HSQLDB] Timeouts: 0
INFO: [HSQLDB] Rows returned: 1
INFO: [HSQLDB] First run: 190ms
INFO: [HSQLDB] Last run: 289ms
INFO: [HSQLDB] Min time: 190ms
INFO: [HSQLDB] Max time: 289ms
INFO: [HSQLDB] Avg time: 196,90ms
INFO: [HSQLDB] Median: 194,50ms

INFO: [HSQLDB] SQL: "SELECT
    borough,
    COUNT(id) AS total_crashes
FROM crash_data
GROUP BY borough
ORDER BY total_crashes DESC;
"
INFO: [HSQLDB] Runs: 50
INFO: [HSQLDB] Timeouts: 0
INFO: [HSQLDB] Rows returned: 6
INFO: [HSQLDB] First run: 206ms
INFO: [HSQLDB] Last run: 296ms
INFO: [HSQLDB] Min time: 206ms
INFO: [HSQLDB] Max time: 296ms
INFO: [HSQLDB] Avg time: 218,22ms
INFO: [HSQLDB] Median: 214,00ms

INFO: [HSQLDB] SQL: "SELECT
    crash_time,
    COUNT(id) AS total_crashes
FROM crash_data
WHERE crash_time != '00:00:00'
GROUP BY crash_time
ORDER BY total_crashes DESC
LIMIT 1;
"
INFO: [HSQLDB] Runs: 50
INFO: [HSQLDB] Timeouts: 0
INFO: [HSQLDB] Rows returned: 1
INFO: [HSQLDB] First run: 384ms
INFO: [HSQLDB] Last run: 417ms
INFO: [HSQLDB] Min time: 384ms
INFO: [HSQLDB] Max time: 417ms
INFO: [HSQLDB] Avg time: 396,68ms
INFO: [HSQLDB] Median: 394,00ms

INFO: [HSQLDB] SQL: "SELECT
    id,
    crash_date,
    crash_time,
    (SELECT COUNT(*) FROM crash_data) AS total_crashes_in_table
FROM crash_data;
"
INFO: [HSQLDB] Runs: 50
INFO: [HSQLDB] Timeouts: 0
INFO: [HSQLDB] Rows returned: 900000
INFO: [HSQLDB] First run: 430ms
INFO: [HSQLDB] Last run: 637ms
INFO: [HSQLDB] Min time: 430ms
INFO: [HSQLDB] Max time: 637ms
INFO: [HSQLDB] Avg time: 478,64ms
INFO: [HSQLDB] Median: 469,00ms

INFO: ===== Benchmarking HSQLDB =====
INFO: ===== Benchmarking Mode: SEQUENTIAL =====
INFO: [HSQLDB] SQL: "SELECT *
  FROM crash_data
 WHERE id = 4455765;
"
INFO: [HSQLDB] Runs: 50
INFO: [HSQLDB] Timeouts: 0
INFO: [HSQLDB] Rows returned: 1
INFO: [HSQLDB] First run: 0ms
INFO: [HSQLDB] Last run: 0ms
INFO: [HSQLDB] Min time: 0ms
INFO: [HSQLDB] Max time: 0ms
INFO: [HSQLDB] Avg time: 0,00ms
INFO: [HSQLDB] Median: 0,00ms

INFO: [HSQLDB] SQL: "SELECT *
  FROM crash_data
 WHERE crash_date BETWEEN '2021-09-01' AND '2021-09-30';
"
INFO: [HSQLDB] Runs: 50
INFO: [HSQLDB] Timeouts: 0
INFO: [HSQLDB] Rows returned: 9896
INFO: [HSQLDB] First run: 306ms
INFO: [HSQLDB] Last run: 373ms
INFO: [HSQLDB] Min time: 306ms
INFO: [HSQLDB] Max time: 373ms
INFO: [HSQLDB] Avg time: 323,36ms
INFO: [HSQLDB] Median: 323,50ms

INFO: [HSQLDB] SQL: "SELECT
    COUNT(id) AS total_crashes_2024
FROM crash_data
WHERE EXTRACT(YEAR FROM crash_date) = 2024;
"
INFO: [HSQLDB] Runs: 50
INFO: [HSQLDB] Timeouts: 0
INFO: [HSQLDB] Rows returned: 1
INFO: [HSQLDB] First run: 380ms
INFO: [HSQLDB] Last run: 413ms
INFO: [HSQLDB] Min time: 380ms
INFO: [HSQLDB] Max time: 413ms
INFO: [HSQLDB] Avg time: 385,62ms
INFO: [HSQLDB] Median: 385,00ms

INFO: [HSQLDB] SQL: "SELECT
    borough,
    COUNT(id) AS total_crashes
FROM crash_data
GROUP BY borough
ORDER BY total_crashes DESC;
"
INFO: [HSQLDB] Runs: 50
INFO: [HSQLDB] Timeouts: 0
INFO: [HSQLDB] Rows returned: 6
INFO: [HSQLDB] First run: 443ms
INFO: [HSQLDB] Last run: 486ms
INFO: [HSQLDB] Min time: 443ms
INFO: [HSQLDB] Max time: 486ms
INFO: [HSQLDB] Avg time: 456,60ms
INFO: [HSQLDB] Median: 453,50ms

INFO: [HSQLDB] SQL: "SELECT
    crash_time,
    COUNT(id) AS total_crashes
FROM crash_data
WHERE crash_time != '00:00:00'
GROUP BY crash_time
ORDER BY total_crashes DESC
LIMIT 1;
"
INFO: [HSQLDB] Runs: 50
INFO: [HSQLDB] Timeouts: 0
INFO: [HSQLDB] Rows returned: 1
INFO: [HSQLDB] First run: 762ms
INFO: [HSQLDB] Last run: 840ms
INFO: [HSQLDB] Min time: 762ms
INFO: [HSQLDB] Max time: 840ms
INFO: [HSQLDB] Avg time: 787,68ms
INFO: [HSQLDB] Median: 781,50ms

INFO: [HSQLDB] SQL: "SELECT
    id,
    crash_date,
    crash_time,
    (SELECT COUNT(*) FROM crash_data) AS total_crashes_in_table
FROM crash_data;
"
INFO: [HSQLDB] Runs: 50
INFO: [HSQLDB] Timeouts: 0
INFO: [HSQLDB] Rows returned: 1799999
INFO: [HSQLDB] First run: 841ms
INFO: [HSQLDB] Last run: 1216ms
INFO: [HSQLDB] Min time: 841ms
INFO: [HSQLDB] Max time: 1216ms
INFO: [HSQLDB] Avg time: 965,16ms
INFO: [HSQLDB] Median: 946,50ms

INFO: ===== Benchmarking HSQLDB =====
INFO: ===== Benchmarking Mode: ROUND_ROBIN =====
INFO: [HSQLDB] SQL: "SELECT *
  FROM crash_data
 WHERE id = 4455765;
"
INFO: [HSQLDB] Runs: 50
INFO: [HSQLDB] Timeouts: 0
INFO: [HSQLDB] Rows returned: 1
INFO: [HSQLDB] First run: 0ms
INFO: [HSQLDB] Last run: 0ms
INFO: [HSQLDB] Min time: 0ms
INFO: [HSQLDB] Max time: 0ms
INFO: [HSQLDB] Avg time: 0,00ms
INFO: [HSQLDB] Median: 0,00ms

INFO: [HSQLDB] SQL: "SELECT *
  FROM crash_data
 WHERE crash_date BETWEEN '2021-09-01' AND '2021-09-30';
"
INFO: [HSQLDB] Runs: 50
INFO: [HSQLDB] Timeouts: 0
INFO: [HSQLDB] Rows returned: 9896
INFO: [HSQLDB] First run: 300ms
INFO: [HSQLDB] Last run: 408ms
INFO: [HSQLDB] Min time: 300ms
INFO: [HSQLDB] Max time: 408ms
INFO: [HSQLDB] Avg time: 319,52ms
INFO: [HSQLDB] Median: 313,50ms

INFO: [HSQLDB] SQL: "SELECT
    COUNT(id) AS total_crashes_2024
FROM crash_data
WHERE EXTRACT(YEAR FROM crash_date) = 2024;
"
INFO: [HSQLDB] Runs: 50
INFO: [HSQLDB] Timeouts: 0
INFO: [HSQLDB] Rows returned: 1
INFO: [HSQLDB] First run: 367ms
INFO: [HSQLDB] Last run: 436ms
INFO: [HSQLDB] Min time: 367ms
INFO: [HSQLDB] Max time: 436ms
INFO: [HSQLDB] Avg time: 383,12ms
INFO: [HSQLDB] Median: 382,00ms

INFO: [HSQLDB] SQL: "SELECT
    borough,
    COUNT(id) AS total_crashes
FROM crash_data
GROUP BY borough
ORDER BY total_crashes DESC;
"
INFO: [HSQLDB] Runs: 50
INFO: [HSQLDB] Timeouts: 0
INFO: [HSQLDB] Rows returned: 6
INFO: [HSQLDB] First run: 444ms
INFO: [HSQLDB] Last run: 565ms
INFO: [HSQLDB] Min time: 444ms
INFO: [HSQLDB] Max time: 565ms
INFO: [HSQLDB] Avg time: 468,90ms
INFO: [HSQLDB] Median: 454,50ms

INFO: [HSQLDB] SQL: "SELECT
    crash_time,
    COUNT(id) AS total_crashes
FROM crash_data
WHERE crash_time != '00:00:00'
GROUP BY crash_time
ORDER BY total_crashes DESC
LIMIT 1;
"
INFO: [HSQLDB] Runs: 50
INFO: [HSQLDB] Timeouts: 0
INFO: [HSQLDB] Rows returned: 1
INFO: [HSQLDB] First run: 763ms
INFO: [HSQLDB] Last run: 883ms
INFO: [HSQLDB] Min time: 763ms
INFO: [HSQLDB] Max time: 883ms
INFO: [HSQLDB] Avg time: 791,40ms
INFO: [HSQLDB] Median: 786,50ms

INFO: [HSQLDB] SQL: "SELECT
    id,
    crash_date,
    crash_time,
    (SELECT COUNT(*) FROM crash_data) AS total_crashes_in_table
FROM crash_data;
"
INFO: [HSQLDB] Runs: 50
INFO: [HSQLDB] Timeouts: 0
INFO: [HSQLDB] Rows returned: 1799999
INFO: [HSQLDB] First run: 867ms
INFO: [HSQLDB] Last run: 1143ms
INFO: [HSQLDB] Min time: 867ms
INFO: [HSQLDB] Max time: 1143ms
INFO: [HSQLDB] Avg time: 962,46ms
INFO: [HSQLDB] Median: 950,50ms

INFO: ===== Benchmarking SQLite =====
INFO: ===== Benchmarking Mode: SEQUENTIAL =====
INFO: [SQLite] SQL: "SELECT *
  FROM crash_data
 WHERE id = 4455765;
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 1
INFO: [SQLite] First run: 0ms
INFO: [SQLite] Last run: 1ms
INFO: [SQLite] Min time: 0ms
INFO: [SQLite] Max time: 1ms
INFO: [SQLite] Avg time: 0,02ms
INFO: [SQLite] Median: 0,00ms

INFO: [SQLite] SQL: "SELECT *
  FROM crash_data
 WHERE crash_date BETWEEN '2021-09-01' AND '2021-09-30';
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 0
INFO: [SQLite] First run: 9ms
INFO: [SQLite] Last run: 11ms
INFO: [SQLite] Min time: 9ms
INFO: [SQLite] Max time: 11ms
INFO: [SQLite] Avg time: 9,40ms
INFO: [SQLite] Median: 9,00ms

INFO: [SQLite] SQL: "SELECT
    COUNT(id) AS total_crashes_2024
FROM crash_data
WHERE strftime('%Y', crash_date) = '2024';
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 1
INFO: [SQLite] First run: 10ms
INFO: [SQLite] Last run: 15ms
INFO: [SQLite] Min time: 10ms
INFO: [SQLite] Max time: 15ms
INFO: [SQLite] Avg time: 11,28ms
INFO: [SQLite] Median: 11,00ms

INFO: [SQLite] SQL: "SELECT
    borough,
    COUNT(id) AS total_crashes
FROM crash_data
GROUP BY borough
ORDER BY total_crashes DESC;
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 6
INFO: [SQLite] First run: 45ms
INFO: [SQLite] Last run: 50ms
INFO: [SQLite] Min time: 45ms
INFO: [SQLite] Max time: 50ms
INFO: [SQLite] Avg time: 46,66ms
INFO: [SQLite] Median: 46,00ms

INFO: [SQLite] SQL: "SELECT
    crash_time,
    COUNT(id) AS total_crashes
FROM crash_data
WHERE crash_time != '00:00:00'
GROUP BY crash_time
ORDER BY total_crashes DESC
LIMIT 1;
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 1
INFO: [SQLite] First run: 38ms
INFO: [SQLite] Last run: 52ms
INFO: [SQLite] Min time: 38ms
INFO: [SQLite] Max time: 52ms
INFO: [SQLite] Avg time: 41,32ms
INFO: [SQLite] Median: 39,00ms

INFO: [SQLite] SQL: "SELECT
    id,
    crash_date,
    crash_time,
    (SELECT COUNT(*) FROM crash_data) AS total_crashes_in_table
FROM crash_data;
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 100000
INFO: [SQLite] First run: 21ms
INFO: [SQLite] Last run: 23ms
INFO: [SQLite] Min time: 21ms
INFO: [SQLite] Max time: 23ms
INFO: [SQLite] Avg time: 21,74ms
INFO: [SQLite] Median: 22,00ms

INFO: [SQLite] SQL: " SELECT
     borough,
     COUNT(id) AS total_crashes,
     (SELECT MAX(persons_injured)
        FROM crash_data c2
       WHERE c2.borough = c1.borough
     ) AS max_injured,
     (SELECT MAX(crash_date)
        FROM crash_data c3
       WHERE c3.borough = c1.borough
     ) AS most_recent_crash_date,
     (SELECT vehicle_type_1
        FROM crash_data c4
       WHERE c4.borough = c1.borough
       ORDER BY crash_date DESC
       LIMIT 1
     ) AS most_recent_vehicle_type
 FROM crash_data c1
WHERE borough IS NOT NULL
GROUP BY borough
ORDER BY total_crashes DESC;
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 5
INFO: [SQLite] First run: 183ms
INFO: [SQLite] Last run: 208ms
INFO: [SQLite] Min time: 183ms
INFO: [SQLite] Max time: 208ms
INFO: [SQLite] Avg time: 191,52ms
INFO: [SQLite] Median: 191,00ms

INFO: [SQLite] SQL: " SELECT
     id,
     crash_date,
     crash_time,
     borough,
     zip_code,
     latitude,
     longitude,
     location,
     on_street_name,
     cross_street_name,
     off_street_name,
     persons_injured,
     persons_killed,
     pedestrians_injured,
     pedestrians_killed,
     cyclists_injured,
     cyclists_killed,
     motorists_injured,
     motorists_killed,
     contributing_factor_1,
     contributing_factor_2,
     contributing_factor_3,
     contributing_factor_4,
     contributing_factor_5,
     vehicle_type_1,
     vehicle_type_2,
     vehicle_type_3,
     vehicle_type_4,
     vehicle_type_5,
     ROUND(latitude, 4) AS rounded_latitude,
     ROUND(longitude, 4) AS rounded_longitude,
     CASE
         WHEN persons_injured > 0 THEN 'Injured'
         ELSE 'No Injuries'
     END AS injury_status,
     LENGTH(location) AS location_length,
     LENGTH(on_street_name) AS on_street_name_length,
     LENGTH(cross_street_name) AS cross_street_name_length,
     UPPER(borough) AS upper_borough,
     CONCAT(on_street_name, ' & ', cross_street_name) AS street_intersection,
     SIN(RADIANS(latitude)) AS sin_latitude,
     COS(RADIANS(longitude)) AS cos_longitude
 FROM crash_data
WHERE borough IN ('BROOKLYN', 'QUEENS', 'MANHATTAN', 'BRONX', 'STATEN ISLAND')
  AND crash_date BETWEEN '2015-01-01' AND '2025-12-31'
  AND persons_injured > 0
  AND zip_code LIKE '1%'
  AND latitude BETWEEN 40.5 AND 41.5
  AND longitude BETWEEN -74.5 AND -73.5
ORDER BY crash_date DESC, crash_time DESC, borough, zip_code;
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 0
INFO: [SQLite] First run: 14ms
INFO: [SQLite] Last run: 16ms
INFO: [SQLite] Min time: 14ms
INFO: [SQLite] Max time: 16ms
INFO: [SQLite] Avg time: 15,04ms
INFO: [SQLite] Median: 15,00ms

INFO: ===== Benchmarking SQLite =====
INFO: ===== Benchmarking Mode: ROUND_ROBIN =====
INFO: [SQLite] SQL: "SELECT *
  FROM crash_data
 WHERE id = 4455765;
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 1
INFO: [SQLite] First run: 0ms
INFO: [SQLite] Last run: 0ms
INFO: [SQLite] Min time: 0ms
INFO: [SQLite] Max time: 0ms
INFO: [SQLite] Avg time: 0,00ms
INFO: [SQLite] Median: 0,00ms

INFO: [SQLite] SQL: "SELECT *
  FROM crash_data
 WHERE crash_date BETWEEN '2021-09-01' AND '2021-09-30';
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 0
INFO: [SQLite] First run: 9ms
INFO: [SQLite] Last run: 10ms
INFO: [SQLite] Min time: 9ms
INFO: [SQLite] Max time: 10ms
INFO: [SQLite] Avg time: 9,02ms
INFO: [SQLite] Median: 9,00ms

INFO: [SQLite] SQL: "SELECT
    COUNT(id) AS total_crashes_2024
FROM crash_data
WHERE strftime('%Y', crash_date) = '2024';
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 1
INFO: [SQLite] First run: 10ms
INFO: [SQLite] Last run: 11ms
INFO: [SQLite] Min time: 10ms
INFO: [SQLite] Max time: 11ms
INFO: [SQLite] Avg time: 10,06ms
INFO: [SQLite] Median: 10,00ms

INFO: [SQLite] SQL: "SELECT
    borough,
    COUNT(id) AS total_crashes
FROM crash_data
GROUP BY borough
ORDER BY total_crashes DESC;
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 6
INFO: [SQLite] First run: 44ms
INFO: [SQLite] Last run: 47ms
INFO: [SQLite] Min time: 44ms
INFO: [SQLite] Max time: 47ms
INFO: [SQLite] Avg time: 45,04ms
INFO: [SQLite] Median: 45,00ms

INFO: [SQLite] SQL: "SELECT
    crash_time,
    COUNT(id) AS total_crashes
FROM crash_data
WHERE crash_time != '00:00:00'
GROUP BY crash_time
ORDER BY total_crashes DESC
LIMIT 1;
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 1
INFO: [SQLite] First run: 38ms
INFO: [SQLite] Last run: 40ms
INFO: [SQLite] Min time: 38ms
INFO: [SQLite] Max time: 40ms
INFO: [SQLite] Avg time: 38,88ms
INFO: [SQLite] Median: 39,00ms

INFO: [SQLite] SQL: "SELECT
    id,
    crash_date,
    crash_time,
    (SELECT COUNT(*) FROM crash_data) AS total_crashes_in_table
FROM crash_data;
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 100000
INFO: [SQLite] First run: 17ms
INFO: [SQLite] Last run: 19ms
INFO: [SQLite] Min time: 17ms
INFO: [SQLite] Max time: 19ms
INFO: [SQLite] Avg time: 17,28ms
INFO: [SQLite] Median: 17,00ms

INFO: [SQLite] SQL: " SELECT
     borough,
     COUNT(id) AS total_crashes,
     (SELECT MAX(persons_injured)
        FROM crash_data c2
       WHERE c2.borough = c1.borough
     ) AS max_injured,
     (SELECT MAX(crash_date)
        FROM crash_data c3
       WHERE c3.borough = c1.borough
     ) AS most_recent_crash_date,
     (SELECT vehicle_type_1
        FROM crash_data c4
       WHERE c4.borough = c1.borough
       ORDER BY crash_date DESC
       LIMIT 1
     ) AS most_recent_vehicle_type
 FROM crash_data c1
WHERE borough IS NOT NULL
GROUP BY borough
ORDER BY total_crashes DESC;
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 5
INFO: [SQLite] First run: 183ms
INFO: [SQLite] Last run: 190ms
INFO: [SQLite] Min time: 183ms
INFO: [SQLite] Max time: 190ms
INFO: [SQLite] Avg time: 185,94ms
INFO: [SQLite] Median: 186,00ms

INFO: [SQLite] SQL: " SELECT
     id,
     crash_date,
     crash_time,
     borough,
     zip_code,
     latitude,
     longitude,
     location,
     on_street_name,
     cross_street_name,
     off_street_name,
     persons_injured,
     persons_killed,
     pedestrians_injured,
     pedestrians_killed,
     cyclists_injured,
     cyclists_killed,
     motorists_injured,
     motorists_killed,
     contributing_factor_1,
     contributing_factor_2,
     contributing_factor_3,
     contributing_factor_4,
     contributing_factor_5,
     vehicle_type_1,
     vehicle_type_2,
     vehicle_type_3,
     vehicle_type_4,
     vehicle_type_5,
     ROUND(latitude, 4) AS rounded_latitude,
     ROUND(longitude, 4) AS rounded_longitude,
     CASE
         WHEN persons_injured > 0 THEN 'Injured'
         ELSE 'No Injuries'
     END AS injury_status,
     LENGTH(location) AS location_length,
     LENGTH(on_street_name) AS on_street_name_length,
     LENGTH(cross_street_name) AS cross_street_name_length,
     UPPER(borough) AS upper_borough,
     CONCAT(on_street_name, ' & ', cross_street_name) AS street_intersection,
     SIN(RADIANS(latitude)) AS sin_latitude,
     COS(RADIANS(longitude)) AS cos_longitude
 FROM crash_data
WHERE borough IN ('BROOKLYN', 'QUEENS', 'MANHATTAN', 'BRONX', 'STATEN ISLAND')
  AND crash_date BETWEEN '2015-01-01' AND '2025-12-31'
  AND persons_injured > 0
  AND zip_code LIKE '1%'
  AND latitude BETWEEN 40.5 AND 41.5
  AND longitude BETWEEN -74.5 AND -73.5
ORDER BY crash_date DESC, crash_time DESC, borough, zip_code;
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 0
INFO: [SQLite] First run: 14ms
INFO: [SQLite] Last run: 15ms
INFO: [SQLite] Min time: 14ms
INFO: [SQLite] Max time: 15ms
INFO: [SQLite] Avg time: 14,30ms
INFO: [SQLite] Median: 14,00ms

INFO: ===== Benchmarking SQLite =====
INFO: ===== Benchmarking Mode: SEQUENTIAL =====
INFO: [SQLite] SQL: "SELECT *
  FROM crash_data
 WHERE id = 4455765;
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 1
INFO: [SQLite] First run: 0ms
INFO: [SQLite] Last run: 0ms
INFO: [SQLite] Min time: 0ms
INFO: [SQLite] Max time: 0ms
INFO: [SQLite] Avg time: 0,00ms
INFO: [SQLite] Median: 0,00ms

INFO: [SQLite] SQL: "SELECT *
  FROM crash_data
 WHERE crash_date BETWEEN '2021-09-01' AND '2021-09-30';
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 0
INFO: [SQLite] First run: 27ms
INFO: [SQLite] Last run: 33ms
INFO: [SQLite] Min time: 27ms
INFO: [SQLite] Max time: 33ms
INFO: [SQLite] Avg time: 29,02ms
INFO: [SQLite] Median: 29,00ms

INFO: [SQLite] SQL: "SELECT
    COUNT(id) AS total_crashes_2024
FROM crash_data
WHERE strftime('%Y', crash_date) = '2024';
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 1
INFO: [SQLite] First run: 32ms
INFO: [SQLite] Last run: 36ms
INFO: [SQLite] Min time: 32ms
INFO: [SQLite] Max time: 36ms
INFO: [SQLite] Avg time: 32,26ms
INFO: [SQLite] Median: 32,00ms

INFO: [SQLite] SQL: "SELECT
    borough,
    COUNT(id) AS total_crashes
FROM crash_data
GROUP BY borough
ORDER BY total_crashes DESC;
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 6
INFO: [SQLite] First run: 145ms
INFO: [SQLite] Last run: 157ms
INFO: [SQLite] Min time: 145ms
INFO: [SQLite] Max time: 157ms
INFO: [SQLite] Avg time: 148,00ms
INFO: [SQLite] Median: 148,00ms

INFO: [SQLite] SQL: "SELECT
    crash_time,
    COUNT(id) AS total_crashes
FROM crash_data
WHERE crash_time != '00:00:00'
GROUP BY crash_time
ORDER BY total_crashes DESC
LIMIT 1;
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 1
INFO: [SQLite] First run: 119ms
INFO: [SQLite] Last run: 135ms
INFO: [SQLite] Min time: 119ms
INFO: [SQLite] Max time: 135ms
INFO: [SQLite] Avg time: 126,36ms
INFO: [SQLite] Median: 127,00ms

INFO: [SQLite] SQL: "SELECT
    id,
    crash_date,
    crash_time,
    (SELECT COUNT(*) FROM crash_data) AS total_crashes_in_table
FROM crash_data;
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 300000
INFO: [SQLite] First run: 53ms
INFO: [SQLite] Last run: 68ms
INFO: [SQLite] Min time: 53ms
INFO: [SQLite] Max time: 68ms
INFO: [SQLite] Avg time: 58,92ms
INFO: [SQLite] Median: 59,00ms

INFO: [SQLite] SQL: " SELECT
     borough,
     COUNT(id) AS total_crashes,
     (SELECT MAX(persons_injured)
        FROM crash_data c2
       WHERE c2.borough = c1.borough
     ) AS max_injured,
     (SELECT MAX(crash_date)
        FROM crash_data c3
       WHERE c3.borough = c1.borough
     ) AS most_recent_crash_date,
     (SELECT vehicle_type_1
        FROM crash_data c4
       WHERE c4.borough = c1.borough
       ORDER BY crash_date DESC
       LIMIT 1
     ) AS most_recent_vehicle_type
 FROM crash_data c1
WHERE borough IS NOT NULL
GROUP BY borough
ORDER BY total_crashes DESC;
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 5
INFO: [SQLite] First run: 564ms
INFO: [SQLite] Last run: 627ms
INFO: [SQLite] Min time: 564ms
INFO: [SQLite] Max time: 627ms
INFO: [SQLite] Avg time: 579,02ms
INFO: [SQLite] Median: 575,50ms

INFO: [SQLite] SQL: " SELECT
     id,
     crash_date,
     crash_time,
     borough,
     zip_code,
     latitude,
     longitude,
     location,
     on_street_name,
     cross_street_name,
     off_street_name,
     persons_injured,
     persons_killed,
     pedestrians_injured,
     pedestrians_killed,
     cyclists_injured,
     cyclists_killed,
     motorists_injured,
     motorists_killed,
     contributing_factor_1,
     contributing_factor_2,
     contributing_factor_3,
     contributing_factor_4,
     contributing_factor_5,
     vehicle_type_1,
     vehicle_type_2,
     vehicle_type_3,
     vehicle_type_4,
     vehicle_type_5,
     ROUND(latitude, 4) AS rounded_latitude,
     ROUND(longitude, 4) AS rounded_longitude,
     CASE
         WHEN persons_injured > 0 THEN 'Injured'
         ELSE 'No Injuries'
     END AS injury_status,
     LENGTH(location) AS location_length,
     LENGTH(on_street_name) AS on_street_name_length,
     LENGTH(cross_street_name) AS cross_street_name_length,
     UPPER(borough) AS upper_borough,
     CONCAT(on_street_name, ' & ', cross_street_name) AS street_intersection,
     SIN(RADIANS(latitude)) AS sin_latitude,
     COS(RADIANS(longitude)) AS cos_longitude
 FROM crash_data
WHERE borough IN ('BROOKLYN', 'QUEENS', 'MANHATTAN', 'BRONX', 'STATEN ISLAND')
  AND crash_date BETWEEN '2015-01-01' AND '2025-12-31'
  AND persons_injured > 0
  AND zip_code LIKE '1%'
  AND latitude BETWEEN 40.5 AND 41.5
  AND longitude BETWEEN -74.5 AND -73.5
ORDER BY crash_date DESC, crash_time DESC, borough, zip_code;
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 0
INFO: [SQLite] First run: 44ms
INFO: [SQLite] Last run: 53ms
INFO: [SQLite] Min time: 44ms
INFO: [SQLite] Max time: 53ms
INFO: [SQLite] Avg time: 46,42ms
INFO: [SQLite] Median: 47,00ms

INFO: ===== Benchmarking SQLite =====
INFO: ===== Benchmarking Mode: ROUND_ROBIN =====
INFO: [SQLite] SQL: "SELECT *
  FROM crash_data
 WHERE id = 4455765;
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 1
INFO: [SQLite] First run: 0ms
INFO: [SQLite] Last run: 0ms
INFO: [SQLite] Min time: 0ms
INFO: [SQLite] Max time: 0ms
INFO: [SQLite] Avg time: 0,00ms
INFO: [SQLite] Median: 0,00ms

INFO: [SQLite] SQL: "SELECT *
  FROM crash_data
 WHERE crash_date BETWEEN '2021-09-01' AND '2021-09-30';
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 0
INFO: [SQLite] First run: 28ms
INFO: [SQLite] Last run: 30ms
INFO: [SQLite] Min time: 28ms
INFO: [SQLite] Max time: 30ms
INFO: [SQLite] Avg time: 28,26ms
INFO: [SQLite] Median: 28,00ms

INFO: [SQLite] SQL: "SELECT
    COUNT(id) AS total_crashes_2024
FROM crash_data
WHERE strftime('%Y', crash_date) = '2024';
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 1
INFO: [SQLite] First run: 32ms
INFO: [SQLite] Last run: 35ms
INFO: [SQLite] Min time: 32ms
INFO: [SQLite] Max time: 35ms
INFO: [SQLite] Avg time: 32,58ms
INFO: [SQLite] Median: 32,00ms

INFO: [SQLite] SQL: "SELECT
    borough,
    COUNT(id) AS total_crashes
FROM crash_data
GROUP BY borough
ORDER BY total_crashes DESC;
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 6
INFO: [SQLite] First run: 145ms
INFO: [SQLite] Last run: 161ms
INFO: [SQLite] Min time: 145ms
INFO: [SQLite] Max time: 161ms
INFO: [SQLite] Avg time: 149,54ms
INFO: [SQLite] Median: 149,00ms

INFO: [SQLite] SQL: "SELECT
    crash_time,
    COUNT(id) AS total_crashes
FROM crash_data
WHERE crash_time != '00:00:00'
GROUP BY crash_time
ORDER BY total_crashes DESC
LIMIT 1;
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 1
INFO: [SQLite] First run: 119ms
INFO: [SQLite] Last run: 127ms
INFO: [SQLite] Min time: 119ms
INFO: [SQLite] Max time: 127ms
INFO: [SQLite] Avg time: 120,76ms
INFO: [SQLite] Median: 120,00ms

INFO: [SQLite] SQL: "SELECT
    id,
    crash_date,
    crash_time,
    (SELECT COUNT(*) FROM crash_data) AS total_crashes_in_table
FROM crash_data;
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 300000
INFO: [SQLite] First run: 53ms
INFO: [SQLite] Last run: 59ms
INFO: [SQLite] Min time: 53ms
INFO: [SQLite] Max time: 59ms
INFO: [SQLite] Avg time: 54,34ms
INFO: [SQLite] Median: 54,00ms

INFO: [SQLite] SQL: " SELECT
     borough,
     COUNT(id) AS total_crashes,
     (SELECT MAX(persons_injured)
        FROM crash_data c2
       WHERE c2.borough = c1.borough
     ) AS max_injured,
     (SELECT MAX(crash_date)
        FROM crash_data c3
       WHERE c3.borough = c1.borough
     ) AS most_recent_crash_date,
     (SELECT vehicle_type_1
        FROM crash_data c4
       WHERE c4.borough = c1.borough
       ORDER BY crash_date DESC
       LIMIT 1
     ) AS most_recent_vehicle_type
 FROM crash_data c1
WHERE borough IS NOT NULL
GROUP BY borough
ORDER BY total_crashes DESC;
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 5
INFO: [SQLite] First run: 561ms
INFO: [SQLite] Last run: 605ms
INFO: [SQLite] Min time: 561ms
INFO: [SQLite] Max time: 605ms
INFO: [SQLite] Avg time: 575,62ms
INFO: [SQLite] Median: 573,00ms

INFO: [SQLite] SQL: " SELECT
     id,
     crash_date,
     crash_time,
     borough,
     zip_code,
     latitude,
     longitude,
     location,
     on_street_name,
     cross_street_name,
     off_street_name,
     persons_injured,
     persons_killed,
     pedestrians_injured,
     pedestrians_killed,
     cyclists_injured,
     cyclists_killed,
     motorists_injured,
     motorists_killed,
     contributing_factor_1,
     contributing_factor_2,
     contributing_factor_3,
     contributing_factor_4,
     contributing_factor_5,
     vehicle_type_1,
     vehicle_type_2,
     vehicle_type_3,
     vehicle_type_4,
     vehicle_type_5,
     ROUND(latitude, 4) AS rounded_latitude,
     ROUND(longitude, 4) AS rounded_longitude,
     CASE
         WHEN persons_injured > 0 THEN 'Injured'
         ELSE 'No Injuries'
     END AS injury_status,
     LENGTH(location) AS location_length,
     LENGTH(on_street_name) AS on_street_name_length,
     LENGTH(cross_street_name) AS cross_street_name_length,
     UPPER(borough) AS upper_borough,
     CONCAT(on_street_name, ' & ', cross_street_name) AS street_intersection,
     SIN(RADIANS(latitude)) AS sin_latitude,
     COS(RADIANS(longitude)) AS cos_longitude
 FROM crash_data
WHERE borough IN ('BROOKLYN', 'QUEENS', 'MANHATTAN', 'BRONX', 'STATEN ISLAND')
  AND crash_date BETWEEN '2015-01-01' AND '2025-12-31'
  AND persons_injured > 0
  AND zip_code LIKE '1%'
  AND latitude BETWEEN 40.5 AND 41.5
  AND longitude BETWEEN -74.5 AND -73.5
ORDER BY crash_date DESC, crash_time DESC, borough, zip_code;
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 0
INFO: [SQLite] First run: 44ms
INFO: [SQLite] Last run: 48ms
INFO: [SQLite] Min time: 44ms
INFO: [SQLite] Max time: 48ms
INFO: [SQLite] Avg time: 45,86ms
INFO: [SQLite] Median: 45,00ms

INFO: ===== Benchmarking SQLite =====
INFO: ===== Benchmarking Mode: SEQUENTIAL =====
INFO: [SQLite] SQL: "SELECT *
  FROM crash_data
 WHERE id = 4455765;
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 1
INFO: [SQLite] First run: 0ms
INFO: [SQLite] Last run: 0ms
INFO: [SQLite] Min time: 0ms
INFO: [SQLite] Max time: 0ms
INFO: [SQLite] Avg time: 0,00ms
INFO: [SQLite] Median: 0,00ms

INFO: [SQLite] SQL: "SELECT *
  FROM crash_data
 WHERE crash_date BETWEEN '2021-09-01' AND '2021-09-30';
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 0
INFO: [SQLite] First run: 84ms
INFO: [SQLite] Last run: 94ms
INFO: [SQLite] Min time: 84ms
INFO: [SQLite] Max time: 94ms
INFO: [SQLite] Avg time: 87,04ms
INFO: [SQLite] Median: 86,00ms

INFO: [SQLite] SQL: "SELECT
    COUNT(id) AS total_crashes_2024
FROM crash_data
WHERE strftime('%Y', crash_date) = '2024';
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 1
INFO: [SQLite] First run: 97ms
INFO: [SQLite] Last run: 110ms
INFO: [SQLite] Min time: 97ms
INFO: [SQLite] Max time: 110ms
INFO: [SQLite] Avg time: 99,92ms
INFO: [SQLite] Median: 99,00ms

INFO: [SQLite] SQL: "SELECT
    borough,
    COUNT(id) AS total_crashes
FROM crash_data
GROUP BY borough
ORDER BY total_crashes DESC;
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 6
INFO: [SQLite] First run: 451ms
INFO: [SQLite] Last run: 487ms
INFO: [SQLite] Min time: 451ms
INFO: [SQLite] Max time: 487ms
INFO: [SQLite] Avg time: 462,42ms
INFO: [SQLite] Median: 460,00ms

INFO: [SQLite] SQL: "SELECT
    crash_time,
    COUNT(id) AS total_crashes
FROM crash_data
WHERE crash_time != '00:00:00'
GROUP BY crash_time
ORDER BY total_crashes DESC
LIMIT 1;
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 1
INFO: [SQLite] First run: 364ms
INFO: [SQLite] Last run: 394ms
INFO: [SQLite] Min time: 364ms
INFO: [SQLite] Max time: 394ms
INFO: [SQLite] Avg time: 376,56ms
INFO: [SQLite] Median: 375,00ms

INFO: [SQLite] SQL: "SELECT
    id,
    crash_date,
    crash_time,
    (SELECT COUNT(*) FROM crash_data) AS total_crashes_in_table
FROM crash_data;
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 900000
INFO: [SQLite] First run: 164ms
INFO: [SQLite] Last run: 173ms
INFO: [SQLite] Min time: 164ms
INFO: [SQLite] Max time: 173ms
INFO: [SQLite] Avg time: 167,70ms
INFO: [SQLite] Median: 168,00ms

INFO: [SQLite] SQL: " SELECT
     borough,
     COUNT(id) AS total_crashes,
     (SELECT MAX(persons_injured)
        FROM crash_data c2
       WHERE c2.borough = c1.borough
     ) AS max_injured,
     (SELECT MAX(crash_date)
        FROM crash_data c3
       WHERE c3.borough = c1.borough
     ) AS most_recent_crash_date,
     (SELECT vehicle_type_1
        FROM crash_data c4
       WHERE c4.borough = c1.borough
       ORDER BY crash_date DESC
       LIMIT 1
     ) AS most_recent_vehicle_type
 FROM crash_data c1
WHERE borough IS NOT NULL
GROUP BY borough
ORDER BY total_crashes DESC;
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 5
INFO: [SQLite] First run: 1710ms
INFO: [SQLite] Last run: 1840ms
INFO: [SQLite] Min time: 1710ms
INFO: [SQLite] Max time: 1840ms
INFO: [SQLite] Avg time: 1745,08ms
INFO: [SQLite] Median: 1736,00ms

INFO: [SQLite] SQL: " SELECT
     id,
     crash_date,
     crash_time,
     borough,
     zip_code,
     latitude,
     longitude,
     location,
     on_street_name,
     cross_street_name,
     off_street_name,
     persons_injured,
     persons_killed,
     pedestrians_injured,
     pedestrians_killed,
     cyclists_injured,
     cyclists_killed,
     motorists_injured,
     motorists_killed,
     contributing_factor_1,
     contributing_factor_2,
     contributing_factor_3,
     contributing_factor_4,
     contributing_factor_5,
     vehicle_type_1,
     vehicle_type_2,
     vehicle_type_3,
     vehicle_type_4,
     vehicle_type_5,
     ROUND(latitude, 4) AS rounded_latitude,
     ROUND(longitude, 4) AS rounded_longitude,
     CASE
         WHEN persons_injured > 0 THEN 'Injured'
         ELSE 'No Injuries'
     END AS injury_status,
     LENGTH(location) AS location_length,
     LENGTH(on_street_name) AS on_street_name_length,
     LENGTH(cross_street_name) AS cross_street_name_length,
     UPPER(borough) AS upper_borough,
     CONCAT(on_street_name, ' & ', cross_street_name) AS street_intersection,
     SIN(RADIANS(latitude)) AS sin_latitude,
     COS(RADIANS(longitude)) AS cos_longitude
 FROM crash_data
WHERE borough IN ('BROOKLYN', 'QUEENS', 'MANHATTAN', 'BRONX', 'STATEN ISLAND')
  AND crash_date BETWEEN '2015-01-01' AND '2025-12-31'
  AND persons_injured > 0
  AND zip_code LIKE '1%'
  AND latitude BETWEEN 40.5 AND 41.5
  AND longitude BETWEEN -74.5 AND -73.5
ORDER BY crash_date DESC, crash_time DESC, borough, zip_code;
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 0
INFO: [SQLite] First run: 135ms
INFO: [SQLite] Last run: 148ms
INFO: [SQLite] Min time: 135ms
INFO: [SQLite] Max time: 148ms
INFO: [SQLite] Avg time: 138,22ms
INFO: [SQLite] Median: 137,00ms

INFO: ===== Benchmarking SQLite =====
INFO: ===== Benchmarking Mode: ROUND_ROBIN =====
INFO: [SQLite] SQL: "SELECT *
  FROM crash_data
 WHERE id = 4455765;
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 1
INFO: [SQLite] First run: 0ms
INFO: [SQLite] Last run: 0ms
INFO: [SQLite] Min time: 0ms
INFO: [SQLite] Max time: 0ms
INFO: [SQLite] Avg time: 0,00ms
INFO: [SQLite] Median: 0,00ms

INFO: [SQLite] SQL: "SELECT *
  FROM crash_data
 WHERE crash_date BETWEEN '2021-09-01' AND '2021-09-30';
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 0
INFO: [SQLite] First run: 84ms
INFO: [SQLite] Last run: 98ms
INFO: [SQLite] Min time: 84ms
INFO: [SQLite] Max time: 98ms
INFO: [SQLite] Avg time: 88,10ms
INFO: [SQLite] Median: 87,00ms

INFO: [SQLite] SQL: "SELECT
    COUNT(id) AS total_crashes_2024
FROM crash_data
WHERE strftime('%Y', crash_date) = '2024';
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 1
INFO: [SQLite] First run: 97ms
INFO: [SQLite] Last run: 106ms
INFO: [SQLite] Min time: 97ms
INFO: [SQLite] Max time: 106ms
INFO: [SQLite] Avg time: 100,48ms
INFO: [SQLite] Median: 99,00ms

INFO: [SQLite] SQL: "SELECT
    borough,
    COUNT(id) AS total_crashes
FROM crash_data
GROUP BY borough
ORDER BY total_crashes DESC;
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 6
INFO: [SQLite] First run: 447ms
INFO: [SQLite] Last run: 491ms
INFO: [SQLite] Min time: 447ms
INFO: [SQLite] Max time: 491ms
INFO: [SQLite] Avg time: 462,80ms
INFO: [SQLite] Median: 459,50ms

INFO: [SQLite] SQL: "SELECT
    crash_time,
    COUNT(id) AS total_crashes
FROM crash_data
WHERE crash_time != '00:00:00'
GROUP BY crash_time
ORDER BY total_crashes DESC
LIMIT 1;
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 1
INFO: [SQLite] First run: 363ms
INFO: [SQLite] Last run: 392ms
INFO: [SQLite] Min time: 363ms
INFO: [SQLite] Max time: 392ms
INFO: [SQLite] Avg time: 373,54ms
INFO: [SQLite] Median: 372,00ms

INFO: [SQLite] SQL: "SELECT
    id,
    crash_date,
    crash_time,
    (SELECT COUNT(*) FROM crash_data) AS total_crashes_in_table
FROM crash_data;
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 900000
INFO: [SQLite] First run: 163ms
INFO: [SQLite] Last run: 186ms
INFO: [SQLite] Min time: 163ms
INFO: [SQLite] Max time: 186ms
INFO: [SQLite] Avg time: 169,66ms
INFO: [SQLite] Median: 166,50ms

INFO: [SQLite] SQL: " SELECT
     borough,
     COUNT(id) AS total_crashes,
     (SELECT MAX(persons_injured)
        FROM crash_data c2
       WHERE c2.borough = c1.borough
     ) AS max_injured,
     (SELECT MAX(crash_date)
        FROM crash_data c3
       WHERE c3.borough = c1.borough
     ) AS most_recent_crash_date,
     (SELECT vehicle_type_1
        FROM crash_data c4
       WHERE c4.borough = c1.borough
       ORDER BY crash_date DESC
       LIMIT 1
     ) AS most_recent_vehicle_type
 FROM crash_data c1
WHERE borough IS NOT NULL
GROUP BY borough
ORDER BY total_crashes DESC;
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 5
INFO: [SQLite] First run: 1715ms
INFO: [SQLite] Last run: 1849ms
INFO: [SQLite] Min time: 1715ms
INFO: [SQLite] Max time: 1849ms
INFO: [SQLite] Avg time: 1763,58ms
INFO: [SQLite] Median: 1754,50ms

INFO: [SQLite] SQL: " SELECT
     id,
     crash_date,
     crash_time,
     borough,
     zip_code,
     latitude,
     longitude,
     location,
     on_street_name,
     cross_street_name,
     off_street_name,
     persons_injured,
     persons_killed,
     pedestrians_injured,
     pedestrians_killed,
     cyclists_injured,
     cyclists_killed,
     motorists_injured,
     motorists_killed,
     contributing_factor_1,
     contributing_factor_2,
     contributing_factor_3,
     contributing_factor_4,
     contributing_factor_5,
     vehicle_type_1,
     vehicle_type_2,
     vehicle_type_3,
     vehicle_type_4,
     vehicle_type_5,
     ROUND(latitude, 4) AS rounded_latitude,
     ROUND(longitude, 4) AS rounded_longitude,
     CASE
         WHEN persons_injured > 0 THEN 'Injured'
         ELSE 'No Injuries'
     END AS injury_status,
     LENGTH(location) AS location_length,
     LENGTH(on_street_name) AS on_street_name_length,
     LENGTH(cross_street_name) AS cross_street_name_length,
     UPPER(borough) AS upper_borough,
     CONCAT(on_street_name, ' & ', cross_street_name) AS street_intersection,
     SIN(RADIANS(latitude)) AS sin_latitude,
     COS(RADIANS(longitude)) AS cos_longitude
 FROM crash_data
WHERE borough IN ('BROOKLYN', 'QUEENS', 'MANHATTAN', 'BRONX', 'STATEN ISLAND')
  AND crash_date BETWEEN '2015-01-01' AND '2025-12-31'
  AND persons_injured > 0
  AND zip_code LIKE '1%'
  AND latitude BETWEEN 40.5 AND 41.5
  AND longitude BETWEEN -74.5 AND -73.5
ORDER BY crash_date DESC, crash_time DESC, borough, zip_code;
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 0
INFO: [SQLite] First run: 134ms
INFO: [SQLite] Last run: 150ms
INFO: [SQLite] Min time: 134ms
INFO: [SQLite] Max time: 150ms
INFO: [SQLite] Avg time: 139,64ms
INFO: [SQLite] Median: 137,50ms

INFO: ===== Benchmarking SQLite =====
INFO: ===== Benchmarking Mode: SEQUENTIAL =====
INFO: [SQLite] SQL: "SELECT *
  FROM crash_data
 WHERE id = 4455765;
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 1
INFO: [SQLite] First run: 0ms
INFO: [SQLite] Last run: 0ms
INFO: [SQLite] Min time: 0ms
INFO: [SQLite] Max time: 0ms
INFO: [SQLite] Avg time: 0,00ms
INFO: [SQLite] Median: 0,00ms

INFO: [SQLite] SQL: "SELECT *
  FROM crash_data
 WHERE crash_date BETWEEN '2021-09-01' AND '2021-09-30';
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 0
INFO: [SQLite] First run: 171ms
INFO: [SQLite] Last run: 177ms
INFO: [SQLite] Min time: 171ms
INFO: [SQLite] Max time: 177ms
INFO: [SQLite] Avg time: 172,22ms
INFO: [SQLite] Median: 172,00ms

INFO: [SQLite] SQL: "SELECT
    COUNT(id) AS total_crashes_2024
FROM crash_data
WHERE strftime('%Y', crash_date) = '2024';
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 1
INFO: [SQLite] First run: 196ms
INFO: [SQLite] Last run: 208ms
INFO: [SQLite] Min time: 196ms
INFO: [SQLite] Max time: 208ms
INFO: [SQLite] Avg time: 198,30ms
INFO: [SQLite] Median: 198,00ms

INFO: [SQLite] SQL: "SELECT
    borough,
    COUNT(id) AS total_crashes
FROM crash_data
GROUP BY borough
ORDER BY total_crashes DESC;
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 6
INFO: [SQLite] First run: 1017ms
INFO: [SQLite] Last run: 1037ms
INFO: [SQLite] Min time: 1017ms
INFO: [SQLite] Max time: 1037ms
INFO: [SQLite] Avg time: 1029,66ms
INFO: [SQLite] Median: 1031,00ms

INFO: [SQLite] SQL: "SELECT
    crash_time,
    COUNT(id) AS total_crashes
FROM crash_data
WHERE crash_time != '00:00:00'
GROUP BY crash_time
ORDER BY total_crashes DESC
LIMIT 1;
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 1
INFO: [SQLite] First run: 813ms
INFO: [SQLite] Last run: 950ms
INFO: [SQLite] Min time: 813ms
INFO: [SQLite] Max time: 950ms
INFO: [SQLite] Avg time: 833,04ms
INFO: [SQLite] Median: 827,00ms

INFO: [SQLite] SQL: "SELECT
    id,
    crash_date,
    crash_time,
    (SELECT COUNT(*) FROM crash_data) AS total_crashes_in_table
FROM crash_data;
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 1799999
INFO: [SQLite] First run: 327ms
INFO: [SQLite] Last run: 348ms
INFO: [SQLite] Min time: 327ms
INFO: [SQLite] Max time: 348ms
INFO: [SQLite] Avg time: 330,20ms
INFO: [SQLite] Median: 329,00ms

INFO: [SQLite] SQL: " SELECT
     borough,
     COUNT(id) AS total_crashes,
     (SELECT MAX(persons_injured)
        FROM crash_data c2
       WHERE c2.borough = c1.borough
     ) AS max_injured,
     (SELECT MAX(crash_date)
        FROM crash_data c3
       WHERE c3.borough = c1.borough
     ) AS most_recent_crash_date,
     (SELECT vehicle_type_1
        FROM crash_data c4
       WHERE c4.borough = c1.borough
       ORDER BY crash_date DESC
       LIMIT 1
     ) AS most_recent_vehicle_type
 FROM crash_data c1
WHERE borough IS NOT NULL
GROUP BY borough
ORDER BY total_crashes DESC;
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 5
INFO: [SQLite] First run: 3504ms
INFO: [SQLite] Last run: 3794ms
INFO: [SQLite] Min time: 3504ms
INFO: [SQLite] Max time: 3794ms
INFO: [SQLite] Avg time: 3577,80ms
INFO: [SQLite] Median: 3571,00ms

INFO: [SQLite] SQL: " SELECT
     id,
     crash_date,
     crash_time,
     borough,
     zip_code,
     latitude,
     longitude,
     location,
     on_street_name,
     cross_street_name,
     off_street_name,
     persons_injured,
     persons_killed,
     pedestrians_injured,
     pedestrians_killed,
     cyclists_injured,
     cyclists_killed,
     motorists_injured,
     motorists_killed,
     contributing_factor_1,
     contributing_factor_2,
     contributing_factor_3,
     contributing_factor_4,
     contributing_factor_5,
     vehicle_type_1,
     vehicle_type_2,
     vehicle_type_3,
     vehicle_type_4,
     vehicle_type_5,
     ROUND(latitude, 4) AS rounded_latitude,
     ROUND(longitude, 4) AS rounded_longitude,
     CASE
         WHEN persons_injured > 0 THEN 'Injured'
         ELSE 'No Injuries'
     END AS injury_status,
     LENGTH(location) AS location_length,
     LENGTH(on_street_name) AS on_street_name_length,
     LENGTH(cross_street_name) AS cross_street_name_length,
     UPPER(borough) AS upper_borough,
     CONCAT(on_street_name, ' & ', cross_street_name) AS street_intersection,
     SIN(RADIANS(latitude)) AS sin_latitude,
     COS(RADIANS(longitude)) AS cos_longitude
 FROM crash_data
WHERE borough IN ('BROOKLYN', 'QUEENS', 'MANHATTAN', 'BRONX', 'STATEN ISLAND')
  AND crash_date BETWEEN '2015-01-01' AND '2025-12-31'
  AND persons_injured > 0
  AND zip_code LIKE '1%'
  AND latitude BETWEEN 40.5 AND 41.5
  AND longitude BETWEEN -74.5 AND -73.5
ORDER BY crash_date DESC, crash_time DESC, borough, zip_code;
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 0
INFO: [SQLite] First run: 271ms
INFO: [SQLite] Last run: 287ms
INFO: [SQLite] Min time: 271ms
INFO: [SQLite] Max time: 287ms
INFO: [SQLite] Avg time: 276,14ms
INFO: [SQLite] Median: 276,00ms

INFO: ===== Benchmarking SQLite =====
INFO: ===== Benchmarking Mode: ROUND_ROBIN =====
INFO: [SQLite] SQL: "SELECT *
  FROM crash_data
 WHERE id = 4455765;
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 1
INFO: [SQLite] First run: 0ms
INFO: [SQLite] Last run: 0ms
INFO: [SQLite] Min time: 0ms
INFO: [SQLite] Max time: 0ms
INFO: [SQLite] Avg time: 0,00ms
INFO: [SQLite] Median: 0,00ms

INFO: [SQLite] SQL: "SELECT *
  FROM crash_data
 WHERE crash_date BETWEEN '2021-09-01' AND '2021-09-30';
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 0
INFO: [SQLite] First run: 169ms
INFO: [SQLite] Last run: 198ms
INFO: [SQLite] Min time: 169ms
INFO: [SQLite] Max time: 198ms
INFO: [SQLite] Avg time: 175,20ms
INFO: [SQLite] Median: 172,50ms

INFO: [SQLite] SQL: "SELECT
    COUNT(id) AS total_crashes_2024
FROM crash_data
WHERE strftime('%Y', crash_date) = '2024';
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 1
INFO: [SQLite] First run: 194ms
INFO: [SQLite] Last run: 212ms
INFO: [SQLite] Min time: 194ms
INFO: [SQLite] Max time: 212ms
INFO: [SQLite] Avg time: 200,14ms
INFO: [SQLite] Median: 198,50ms

INFO: [SQLite] SQL: "SELECT
    borough,
    COUNT(id) AS total_crashes
FROM crash_data
GROUP BY borough
ORDER BY total_crashes DESC;
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 6
INFO: [SQLite] First run: 1015ms
INFO: [SQLite] Last run: 1095ms
INFO: [SQLite] Min time: 1015ms
INFO: [SQLite] Max time: 1095ms
INFO: [SQLite] Avg time: 1041,00ms
INFO: [SQLite] Median: 1028,50ms

INFO: [SQLite] SQL: "SELECT
    crash_time,
    COUNT(id) AS total_crashes
FROM crash_data
WHERE crash_time != '00:00:00'
GROUP BY crash_time
ORDER BY total_crashes DESC
LIMIT 1;
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 1
INFO: [SQLite] First run: 803ms
INFO: [SQLite] Last run: 876ms
INFO: [SQLite] Min time: 803ms
INFO: [SQLite] Max time: 876ms
INFO: [SQLite] Avg time: 827,90ms
INFO: [SQLite] Median: 823,50ms

INFO: [SQLite] SQL: "SELECT
    id,
    crash_date,
    crash_time,
    (SELECT COUNT(*) FROM crash_data) AS total_crashes_in_table
FROM crash_data;
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 1799999
INFO: [SQLite] First run: 326ms
INFO: [SQLite] Last run: 366ms
INFO: [SQLite] Min time: 326ms
INFO: [SQLite] Max time: 366ms
INFO: [SQLite] Avg time: 336,18ms
INFO: [SQLite] Median: 331,00ms

INFO: [SQLite] SQL: " SELECT
     borough,
     COUNT(id) AS total_crashes,
     (SELECT MAX(persons_injured)
        FROM crash_data c2
       WHERE c2.borough = c1.borough
     ) AS max_injured,
     (SELECT MAX(crash_date)
        FROM crash_data c3
       WHERE c3.borough = c1.borough
     ) AS most_recent_crash_date,
     (SELECT vehicle_type_1
        FROM crash_data c4
       WHERE c4.borough = c1.borough
       ORDER BY crash_date DESC
       LIMIT 1
     ) AS most_recent_vehicle_type
 FROM crash_data c1
WHERE borough IS NOT NULL
GROUP BY borough
ORDER BY total_crashes DESC;
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 5
INFO: [SQLite] First run: 3500ms
INFO: [SQLite] Last run: 3790ms
INFO: [SQLite] Min time: 3500ms
INFO: [SQLite] Max time: 3790ms
INFO: [SQLite] Avg time: 3586,04ms
INFO: [SQLite] Median: 3552,50ms

INFO: [SQLite] SQL: " SELECT
     id,
     crash_date,
     crash_time,
     borough,
     zip_code,
     latitude,
     longitude,
     location,
     on_street_name,
     cross_street_name,
     off_street_name,
     persons_injured,
     persons_killed,
     pedestrians_injured,
     pedestrians_killed,
     cyclists_injured,
     cyclists_killed,
     motorists_injured,
     motorists_killed,
     contributing_factor_1,
     contributing_factor_2,
     contributing_factor_3,
     contributing_factor_4,
     contributing_factor_5,
     vehicle_type_1,
     vehicle_type_2,
     vehicle_type_3,
     vehicle_type_4,
     vehicle_type_5,
     ROUND(latitude, 4) AS rounded_latitude,
     ROUND(longitude, 4) AS rounded_longitude,
     CASE
         WHEN persons_injured > 0 THEN 'Injured'
         ELSE 'No Injuries'
     END AS injury_status,
     LENGTH(location) AS location_length,
     LENGTH(on_street_name) AS on_street_name_length,
     LENGTH(cross_street_name) AS cross_street_name_length,
     UPPER(borough) AS upper_borough,
     CONCAT(on_street_name, ' & ', cross_street_name) AS street_intersection,
     SIN(RADIANS(latitude)) AS sin_latitude,
     COS(RADIANS(longitude)) AS cos_longitude
 FROM crash_data
WHERE borough IN ('BROOKLYN', 'QUEENS', 'MANHATTAN', 'BRONX', 'STATEN ISLAND')
  AND crash_date BETWEEN '2015-01-01' AND '2025-12-31'
  AND persons_injured > 0
  AND zip_code LIKE '1%'
  AND latitude BETWEEN 40.5 AND 41.5
  AND longitude BETWEEN -74.5 AND -73.5
ORDER BY crash_date DESC, crash_time DESC, borough, zip_code;
"
INFO: [SQLite] Runs: 50
INFO: [SQLite] Timeouts: 0
INFO: [SQLite] Rows returned: 0
INFO: [SQLite] First run: 271ms
INFO: [SQLite] Last run: 304ms
INFO: [SQLite] Min time: 271ms
INFO: [SQLite] Max time: 304ms
INFO: [SQLite] Avg time: 281,10ms
INFO: [SQLite] Median: 278,00ms

INFO: ===== Benchmarking Postgres =====
INFO: ===== Benchmarking Mode: SEQUENTIAL =====
INFO: [Postgres] SQL: "SELECT *
  FROM crash_data
 WHERE id = 4455765;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 1
INFO: [Postgres] First run: 0ms
INFO: [Postgres] Last run: 9ms
INFO: [Postgres] Min time: 0ms
INFO: [Postgres] Max time: 9ms
INFO: [Postgres] Avg time: 0,18ms
INFO: [Postgres] Median: 0,00ms

INFO: [Postgres] SQL: "SELECT *
  FROM crash_data
 WHERE crash_date BETWEEN '2021-09-01' AND '2021-09-30';
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 9875
INFO: [Postgres] First run: 23ms
INFO: [Postgres] Last run: 38ms
INFO: [Postgres] Min time: 23ms
INFO: [Postgres] Max time: 38ms
INFO: [Postgres] Avg time: 25,14ms
INFO: [Postgres] Median: 25,00ms

INFO: [Postgres] SQL: "SELECT
    COUNT(id) AS total_crashes_2024
FROM crash_data
WHERE EXTRACT(YEAR FROM crash_date) = 2024;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 1
INFO: [Postgres] First run: 13ms
INFO: [Postgres] Last run: 21ms
INFO: [Postgres] Min time: 13ms
INFO: [Postgres] Max time: 21ms
INFO: [Postgres] Avg time: 14,70ms
INFO: [Postgres] Median: 15,00ms

INFO: [Postgres] SQL: "SELECT
    borough,
    COUNT(id) AS total_crashes
FROM crash_data
GROUP BY borough
ORDER BY total_crashes DESC;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 6
INFO: [Postgres] First run: 13ms
INFO: [Postgres] Last run: 17ms
INFO: [Postgres] Min time: 13ms
INFO: [Postgres] Max time: 17ms
INFO: [Postgres] Avg time: 14,24ms
INFO: [Postgres] Median: 14,00ms

INFO: [Postgres] SQL: "SELECT
    crash_time,
    COUNT(id) AS total_crashes
FROM crash_data
WHERE crash_time != '00:00:00'
GROUP BY crash_time
ORDER BY total_crashes DESC
LIMIT 1;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 1
INFO: [Postgres] First run: 15ms
INFO: [Postgres] Last run: 26ms
INFO: [Postgres] Min time: 15ms
INFO: [Postgres] Max time: 26ms
INFO: [Postgres] Avg time: 16,86ms
INFO: [Postgres] Median: 17,00ms

INFO: [Postgres] SQL: "SELECT
    id,
    crash_date,
    crash_time,
    (SELECT COUNT(*) FROM crash_data) AS total_crashes_in_table
FROM crash_data;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 100000
INFO: [Postgres] First run: 38ms
INFO: [Postgres] Last run: 45ms
INFO: [Postgres] Min time: 38ms
INFO: [Postgres] Max time: 45ms
INFO: [Postgres] Avg time: 39,74ms
INFO: [Postgres] Median: 39,00ms

INFO: [Postgres] SQL: " SELECT
     borough,
     COUNT(id) AS total_crashes,
     (SELECT MAX(persons_injured)
        FROM crash_data c2
       WHERE c2.borough = c1.borough
     ) AS max_injured,
     (SELECT MAX(crash_date)
        FROM crash_data c3
       WHERE c3.borough = c1.borough
     ) AS most_recent_crash_date,
     (SELECT vehicle_type_1
        FROM crash_data c4
       WHERE c4.borough = c1.borough
       ORDER BY crash_date DESC
       LIMIT 1
     ) AS most_recent_vehicle_type
 FROM crash_data c1
WHERE borough IS NOT NULL
GROUP BY borough
ORDER BY total_crashes DESC;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 5
INFO: [Postgres] First run: 133ms
INFO: [Postgres] Last run: 175ms
INFO: [Postgres] Min time: 133ms
INFO: [Postgres] Max time: 175ms
INFO: [Postgres] Avg time: 145,40ms
INFO: [Postgres] Median: 142,00ms

INFO: [Postgres] SQL: " SELECT
     id,
     crash_date,
     crash_time,
     borough,
     zip_code,
     latitude,
     longitude,
     location,
     on_street_name,
     cross_street_name,
     off_street_name,
     persons_injured,
     persons_killed,
     pedestrians_injured,
     pedestrians_killed,
     cyclists_injured,
     cyclists_killed,
     motorists_injured,
     motorists_killed,
     contributing_factor_1,
     contributing_factor_2,
     contributing_factor_3,
     contributing_factor_4,
     contributing_factor_5,
     vehicle_type_1,
     vehicle_type_2,
     vehicle_type_3,
     vehicle_type_4,
     vehicle_type_5,
     ROUND(latitude, 4) AS rounded_latitude,
     ROUND(longitude, 4) AS rounded_longitude,
     CASE
         WHEN persons_injured > 0 THEN 'Injured'
         ELSE 'No Injuries'
     END AS injury_status,
     LENGTH(location) AS location_length,
     LENGTH(on_street_name) AS on_street_name_length,
     LENGTH(cross_street_name) AS cross_street_name_length,
     UPPER(borough) AS upper_borough,
     CONCAT(on_street_name, ' & ', cross_street_name) AS street_intersection,
     SIN(RADIANS(latitude)) AS sin_latitude,
     COS(RADIANS(longitude)) AS cos_longitude
 FROM crash_data
WHERE borough IN ('BROOKLYN', 'QUEENS', 'MANHATTAN', 'BRONX', 'STATEN ISLAND')
  AND crash_date BETWEEN '2015-01-01' AND '2025-12-31'
  AND persons_injured > 0
  AND zip_code LIKE '1%'
  AND latitude BETWEEN 40.5 AND 41.5
  AND longitude BETWEEN -74.5 AND -73.5
ORDER BY crash_date DESC, crash_time DESC, borough, zip_code;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 22062
INFO: [Postgres] First run: 78ms
INFO: [Postgres] Last run: 111ms
INFO: [Postgres] Min time: 78ms
INFO: [Postgres] Max time: 111ms
INFO: [Postgres] Avg time: 89,44ms
INFO: [Postgres] Median: 87,00ms

INFO: ===== Benchmarking Postgres =====
INFO: ===== Benchmarking Mode: ROUND_ROBIN =====
INFO: [Postgres] SQL: "SELECT *
  FROM crash_data
 WHERE id = 4455765;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 1
INFO: [Postgres] First run: 0ms
INFO: [Postgres] Last run: 1ms
INFO: [Postgres] Min time: 0ms
INFO: [Postgres] Max time: 1ms
INFO: [Postgres] Avg time: 0,02ms
INFO: [Postgres] Median: 0,00ms

INFO: [Postgres] SQL: "SELECT *
  FROM crash_data
 WHERE crash_date BETWEEN '2021-09-01' AND '2021-09-30';
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 9875
INFO: [Postgres] First run: 23ms
INFO: [Postgres] Last run: 29ms
INFO: [Postgres] Min time: 23ms
INFO: [Postgres] Max time: 29ms
INFO: [Postgres] Avg time: 25,14ms
INFO: [Postgres] Median: 25,00ms

INFO: [Postgres] SQL: "SELECT
    COUNT(id) AS total_crashes_2024
FROM crash_data
WHERE EXTRACT(YEAR FROM crash_date) = 2024;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 1
INFO: [Postgres] First run: 15ms
INFO: [Postgres] Last run: 17ms
INFO: [Postgres] Min time: 15ms
INFO: [Postgres] Max time: 17ms
INFO: [Postgres] Avg time: 15,20ms
INFO: [Postgres] Median: 15,00ms

INFO: [Postgres] SQL: "SELECT
    borough,
    COUNT(id) AS total_crashes
FROM crash_data
GROUP BY borough
ORDER BY total_crashes DESC;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 6
INFO: [Postgres] First run: 14ms
INFO: [Postgres] Last run: 17ms
INFO: [Postgres] Min time: 14ms
INFO: [Postgres] Max time: 17ms
INFO: [Postgres] Avg time: 14,48ms
INFO: [Postgres] Median: 14,00ms

INFO: [Postgres] SQL: "SELECT
    crash_time,
    COUNT(id) AS total_crashes
FROM crash_data
WHERE crash_time != '00:00:00'
GROUP BY crash_time
ORDER BY total_crashes DESC
LIMIT 1;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 1
INFO: [Postgres] First run: 16ms
INFO: [Postgres] Last run: 19ms
INFO: [Postgres] Min time: 16ms
INFO: [Postgres] Max time: 19ms
INFO: [Postgres] Avg time: 16,44ms
INFO: [Postgres] Median: 16,00ms

INFO: [Postgres] SQL: "SELECT
    id,
    crash_date,
    crash_time,
    (SELECT COUNT(*) FROM crash_data) AS total_crashes_in_table
FROM crash_data;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 100000
INFO: [Postgres] First run: 38ms
INFO: [Postgres] Last run: 49ms
INFO: [Postgres] Min time: 38ms
INFO: [Postgres] Max time: 49ms
INFO: [Postgres] Avg time: 39,38ms
INFO: [Postgres] Median: 38,00ms

INFO: [Postgres] SQL: " SELECT
     borough,
     COUNT(id) AS total_crashes,
     (SELECT MAX(persons_injured)
        FROM crash_data c2
       WHERE c2.borough = c1.borough
     ) AS max_injured,
     (SELECT MAX(crash_date)
        FROM crash_data c3
       WHERE c3.borough = c1.borough
     ) AS most_recent_crash_date,
     (SELECT vehicle_type_1
        FROM crash_data c4
       WHERE c4.borough = c1.borough
       ORDER BY crash_date DESC
       LIMIT 1
     ) AS most_recent_vehicle_type
 FROM crash_data c1
WHERE borough IS NOT NULL
GROUP BY borough
ORDER BY total_crashes DESC;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 5
INFO: [Postgres] First run: 137ms
INFO: [Postgres] Last run: 164ms
INFO: [Postgres] Min time: 137ms
INFO: [Postgres] Max time: 164ms
INFO: [Postgres] Avg time: 144,52ms
INFO: [Postgres] Median: 144,00ms

INFO: [Postgres] SQL: " SELECT
     id,
     crash_date,
     crash_time,
     borough,
     zip_code,
     latitude,
     longitude,
     location,
     on_street_name,
     cross_street_name,
     off_street_name,
     persons_injured,
     persons_killed,
     pedestrians_injured,
     pedestrians_killed,
     cyclists_injured,
     cyclists_killed,
     motorists_injured,
     motorists_killed,
     contributing_factor_1,
     contributing_factor_2,
     contributing_factor_3,
     contributing_factor_4,
     contributing_factor_5,
     vehicle_type_1,
     vehicle_type_2,
     vehicle_type_3,
     vehicle_type_4,
     vehicle_type_5,
     ROUND(latitude, 4) AS rounded_latitude,
     ROUND(longitude, 4) AS rounded_longitude,
     CASE
         WHEN persons_injured > 0 THEN 'Injured'
         ELSE 'No Injuries'
     END AS injury_status,
     LENGTH(location) AS location_length,
     LENGTH(on_street_name) AS on_street_name_length,
     LENGTH(cross_street_name) AS cross_street_name_length,
     UPPER(borough) AS upper_borough,
     CONCAT(on_street_name, ' & ', cross_street_name) AS street_intersection,
     SIN(RADIANS(latitude)) AS sin_latitude,
     COS(RADIANS(longitude)) AS cos_longitude
 FROM crash_data
WHERE borough IN ('BROOKLYN', 'QUEENS', 'MANHATTAN', 'BRONX', 'STATEN ISLAND')
  AND crash_date BETWEEN '2015-01-01' AND '2025-12-31'
  AND persons_injured > 0
  AND zip_code LIKE '1%'
  AND latitude BETWEEN 40.5 AND 41.5
  AND longitude BETWEEN -74.5 AND -73.5
ORDER BY crash_date DESC, crash_time DESC, borough, zip_code;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 22062
INFO: [Postgres] First run: 80ms
INFO: [Postgres] Last run: 108ms
INFO: [Postgres] Min time: 80ms
INFO: [Postgres] Max time: 108ms
INFO: [Postgres] Avg time: 86,24ms
INFO: [Postgres] Median: 84,50ms

INFO: ===== Benchmarking Postgres =====
INFO: ===== Benchmarking Mode: SEQUENTIAL =====
INFO: [Postgres] SQL: "SELECT *
  FROM crash_data
 WHERE id = 4455765;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 1
INFO: [Postgres] First run: 0ms
INFO: [Postgres] Last run: 1ms
INFO: [Postgres] Min time: 0ms
INFO: [Postgres] Max time: 1ms
INFO: [Postgres] Avg time: 0,02ms
INFO: [Postgres] Median: 0,00ms

INFO: [Postgres] SQL: "SELECT *
  FROM crash_data
 WHERE crash_date BETWEEN '2021-09-01' AND '2021-09-30';
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 9896
INFO: [Postgres] First run: 27ms
INFO: [Postgres] Last run: 37ms
INFO: [Postgres] Min time: 27ms
INFO: [Postgres] Max time: 37ms
INFO: [Postgres] Avg time: 28,96ms
INFO: [Postgres] Median: 28,00ms

INFO: [Postgres] SQL: "SELECT
    COUNT(id) AS total_crashes_2024
FROM crash_data
WHERE EXTRACT(YEAR FROM crash_date) = 2024;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 1
INFO: [Postgres] First run: 22ms
INFO: [Postgres] Last run: 25ms
INFO: [Postgres] Min time: 22ms
INFO: [Postgres] Max time: 25ms
INFO: [Postgres] Avg time: 22,58ms
INFO: [Postgres] Median: 22,00ms

INFO: [Postgres] SQL: "SELECT
    borough,
    COUNT(id) AS total_crashes
FROM crash_data
GROUP BY borough
ORDER BY total_crashes DESC;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 6
INFO: [Postgres] First run: 21ms
INFO: [Postgres] Last run: 27ms
INFO: [Postgres] Min time: 21ms
INFO: [Postgres] Max time: 27ms
INFO: [Postgres] Avg time: 22,16ms
INFO: [Postgres] Median: 22,00ms

INFO: [Postgres] SQL: "SELECT
    crash_time,
    COUNT(id) AS total_crashes
FROM crash_data
WHERE crash_time != '00:00:00'
GROUP BY crash_time
ORDER BY total_crashes DESC
LIMIT 1;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 1
INFO: [Postgres] First run: 24ms
INFO: [Postgres] Last run: 31ms
INFO: [Postgres] Min time: 24ms
INFO: [Postgres] Max time: 31ms
INFO: [Postgres] Avg time: 25,10ms
INFO: [Postgres] Median: 25,00ms

INFO: [Postgres] SQL: "SELECT
    id,
    crash_date,
    crash_time,
    (SELECT COUNT(*) FROM crash_data) AS total_crashes_in_table
FROM crash_data;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 300000
INFO: [Postgres] First run: 110ms
INFO: [Postgres] Last run: 152ms
INFO: [Postgres] Min time: 110ms
INFO: [Postgres] Max time: 152ms
INFO: [Postgres] Avg time: 121,04ms
INFO: [Postgres] Median: 116,00ms

INFO: [Postgres] SQL: " SELECT
     borough,
     COUNT(id) AS total_crashes,
     (SELECT MAX(persons_injured)
        FROM crash_data c2
       WHERE c2.borough = c1.borough
     ) AS max_injured,
     (SELECT MAX(crash_date)
        FROM crash_data c3
       WHERE c3.borough = c1.borough
     ) AS most_recent_crash_date,
     (SELECT vehicle_type_1
        FROM crash_data c4
       WHERE c4.borough = c1.borough
       ORDER BY crash_date DESC
       LIMIT 1
     ) AS most_recent_vehicle_type
 FROM crash_data c1
WHERE borough IS NOT NULL
GROUP BY borough
ORDER BY total_crashes DESC;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 5
INFO: [Postgres] First run: 472ms
INFO: [Postgres] Last run: 644ms
INFO: [Postgres] Min time: 472ms
INFO: [Postgres] Max time: 644ms
INFO: [Postgres] Avg time: 487,98ms
INFO: [Postgres] Median: 483,00ms

INFO: [Postgres] SQL: " SELECT
     id,
     crash_date,
     crash_time,
     borough,
     zip_code,
     latitude,
     longitude,
     location,
     on_street_name,
     cross_street_name,
     off_street_name,
     persons_injured,
     persons_killed,
     pedestrians_injured,
     pedestrians_killed,
     cyclists_injured,
     cyclists_killed,
     motorists_injured,
     motorists_killed,
     contributing_factor_1,
     contributing_factor_2,
     contributing_factor_3,
     contributing_factor_4,
     contributing_factor_5,
     vehicle_type_1,
     vehicle_type_2,
     vehicle_type_3,
     vehicle_type_4,
     vehicle_type_5,
     ROUND(latitude, 4) AS rounded_latitude,
     ROUND(longitude, 4) AS rounded_longitude,
     CASE
         WHEN persons_injured > 0 THEN 'Injured'
         ELSE 'No Injuries'
     END AS injury_status,
     LENGTH(location) AS location_length,
     LENGTH(on_street_name) AS on_street_name_length,
     LENGTH(cross_street_name) AS cross_street_name_length,
     UPPER(borough) AS upper_borough,
     CONCAT(on_street_name, ' & ', cross_street_name) AS street_intersection,
     SIN(RADIANS(latitude)) AS sin_latitude,
     COS(RADIANS(longitude)) AS cos_longitude
 FROM crash_data
WHERE borough IN ('BROOKLYN', 'QUEENS', 'MANHATTAN', 'BRONX', 'STATEN ISLAND')
  AND crash_date BETWEEN '2015-01-01' AND '2025-12-31'
  AND persons_injured > 0
  AND zip_code LIKE '1%'
  AND latitude BETWEEN 40.5 AND 41.5
  AND longitude BETWEEN -74.5 AND -73.5
ORDER BY crash_date DESC, crash_time DESC, borough, zip_code;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 72911
INFO: [Postgres] First run: 238ms
INFO: [Postgres] Last run: 315ms
INFO: [Postgres] Min time: 238ms
INFO: [Postgres] Max time: 315ms
INFO: [Postgres] Avg time: 254,74ms
INFO: [Postgres] Median: 251,00ms

INFO: ===== Benchmarking Postgres =====
INFO: ===== Benchmarking Mode: ROUND_ROBIN =====
INFO: [Postgres] SQL: "SELECT *
  FROM crash_data
 WHERE id = 4455765;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 1
INFO: [Postgres] First run: 0ms
INFO: [Postgres] Last run: 1ms
INFO: [Postgres] Min time: 0ms
INFO: [Postgres] Max time: 1ms
INFO: [Postgres] Avg time: 0,02ms
INFO: [Postgres] Median: 0,00ms

INFO: [Postgres] SQL: "SELECT *
  FROM crash_data
 WHERE crash_date BETWEEN '2021-09-01' AND '2021-09-30';
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 9896
INFO: [Postgres] First run: 29ms
INFO: [Postgres] Last run: 44ms
INFO: [Postgres] Min time: 29ms
INFO: [Postgres] Max time: 44ms
INFO: [Postgres] Avg time: 33,86ms
INFO: [Postgres] Median: 33,00ms

INFO: [Postgres] SQL: "SELECT
    COUNT(id) AS total_crashes_2024
FROM crash_data
WHERE EXTRACT(YEAR FROM crash_date) = 2024;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 1
INFO: [Postgres] First run: 29ms
INFO: [Postgres] Last run: 38ms
INFO: [Postgres] Min time: 29ms
INFO: [Postgres] Max time: 38ms
INFO: [Postgres] Avg time: 31,00ms
INFO: [Postgres] Median: 30,50ms

INFO: [Postgres] SQL: "SELECT
    borough,
    COUNT(id) AS total_crashes
FROM crash_data
GROUP BY borough
ORDER BY total_crashes DESC;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 6
INFO: [Postgres] First run: 24ms
INFO: [Postgres] Last run: 36ms
INFO: [Postgres] Min time: 24ms
INFO: [Postgres] Max time: 36ms
INFO: [Postgres] Avg time: 29,72ms
INFO: [Postgres] Median: 30,00ms

INFO: [Postgres] SQL: "SELECT
    crash_time,
    COUNT(id) AS total_crashes
FROM crash_data
WHERE crash_time != '00:00:00'
GROUP BY crash_time
ORDER BY total_crashes DESC
LIMIT 1;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 1
INFO: [Postgres] First run: 25ms
INFO: [Postgres] Last run: 40ms
INFO: [Postgres] Min time: 25ms
INFO: [Postgres] Max time: 40ms
INFO: [Postgres] Avg time: 33,02ms
INFO: [Postgres] Median: 33,00ms

INFO: [Postgres] SQL: "SELECT
    id,
    crash_date,
    crash_time,
    (SELECT COUNT(*) FROM crash_data) AS total_crashes_in_table
FROM crash_data;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 300000
INFO: [Postgres] First run: 113ms
INFO: [Postgres] Last run: 145ms
INFO: [Postgres] Min time: 113ms
INFO: [Postgres] Max time: 145ms
INFO: [Postgres] Avg time: 122,16ms
INFO: [Postgres] Median: 118,50ms

INFO: [Postgres] SQL: " SELECT
     borough,
     COUNT(id) AS total_crashes,
     (SELECT MAX(persons_injured)
        FROM crash_data c2
       WHERE c2.borough = c1.borough
     ) AS max_injured,
     (SELECT MAX(crash_date)
        FROM crash_data c3
       WHERE c3.borough = c1.borough
     ) AS most_recent_crash_date,
     (SELECT vehicle_type_1
        FROM crash_data c4
       WHERE c4.borough = c1.borough
       ORDER BY crash_date DESC
       LIMIT 1
     ) AS most_recent_vehicle_type
 FROM crash_data c1
WHERE borough IS NOT NULL
GROUP BY borough
ORDER BY total_crashes DESC;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 5
INFO: [Postgres] First run: 478ms
INFO: [Postgres] Last run: 517ms
INFO: [Postgres] Min time: 478ms
INFO: [Postgres] Max time: 517ms
INFO: [Postgres] Avg time: 490,02ms
INFO: [Postgres] Median: 487,00ms

INFO: [Postgres] SQL: " SELECT
     id,
     crash_date,
     crash_time,
     borough,
     zip_code,
     latitude,
     longitude,
     location,
     on_street_name,
     cross_street_name,
     off_street_name,
     persons_injured,
     persons_killed,
     pedestrians_injured,
     pedestrians_killed,
     cyclists_injured,
     cyclists_killed,
     motorists_injured,
     motorists_killed,
     contributing_factor_1,
     contributing_factor_2,
     contributing_factor_3,
     contributing_factor_4,
     contributing_factor_5,
     vehicle_type_1,
     vehicle_type_2,
     vehicle_type_3,
     vehicle_type_4,
     vehicle_type_5,
     ROUND(latitude, 4) AS rounded_latitude,
     ROUND(longitude, 4) AS rounded_longitude,
     CASE
         WHEN persons_injured > 0 THEN 'Injured'
         ELSE 'No Injuries'
     END AS injury_status,
     LENGTH(location) AS location_length,
     LENGTH(on_street_name) AS on_street_name_length,
     LENGTH(cross_street_name) AS cross_street_name_length,
     UPPER(borough) AS upper_borough,
     CONCAT(on_street_name, ' & ', cross_street_name) AS street_intersection,
     SIN(RADIANS(latitude)) AS sin_latitude,
     COS(RADIANS(longitude)) AS cos_longitude
 FROM crash_data
WHERE borough IN ('BROOKLYN', 'QUEENS', 'MANHATTAN', 'BRONX', 'STATEN ISLAND')
  AND crash_date BETWEEN '2015-01-01' AND '2025-12-31'
  AND persons_injured > 0
  AND zip_code LIKE '1%'
  AND latitude BETWEEN 40.5 AND 41.5
  AND longitude BETWEEN -74.5 AND -73.5
ORDER BY crash_date DESC, crash_time DESC, borough, zip_code;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 72911
INFO: [Postgres] First run: 234ms
INFO: [Postgres] Last run: 316ms
INFO: [Postgres] Min time: 234ms
INFO: [Postgres] Max time: 316ms
INFO: [Postgres] Avg time: 258,88ms
INFO: [Postgres] Median: 254,00ms

INFO: ===== Benchmarking Postgres =====
INFO: ===== Benchmarking Mode: SEQUENTIAL =====
INFO: [Postgres] SQL: "SELECT *
  FROM crash_data
 WHERE id = 4455765;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 1
INFO: [Postgres] First run: 0ms
INFO: [Postgres] Last run: 1ms
INFO: [Postgres] Min time: 0ms
INFO: [Postgres] Max time: 1ms
INFO: [Postgres] Avg time: 0,02ms
INFO: [Postgres] Median: 0,00ms

INFO: [Postgres] SQL: "SELECT *
  FROM crash_data
 WHERE crash_date BETWEEN '2021-09-01' AND '2021-09-30';
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 9896
INFO: [Postgres] First run: 47ms
INFO: [Postgres] Last run: 55ms
INFO: [Postgres] Min time: 47ms
INFO: [Postgres] Max time: 55ms
INFO: [Postgres] Avg time: 47,98ms
INFO: [Postgres] Median: 48,00ms

INFO: [Postgres] SQL: "SELECT
    COUNT(id) AS total_crashes_2024
FROM crash_data
WHERE EXTRACT(YEAR FROM crash_date) = 2024;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 1
INFO: [Postgres] First run: 55ms
INFO: [Postgres] Last run: 58ms
INFO: [Postgres] Min time: 55ms
INFO: [Postgres] Max time: 58ms
INFO: [Postgres] Avg time: 56,08ms
INFO: [Postgres] Median: 56,00ms

INFO: [Postgres] SQL: "SELECT
    borough,
    COUNT(id) AS total_crashes
FROM crash_data
GROUP BY borough
ORDER BY total_crashes DESC;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 6
INFO: [Postgres] First run: 55ms
INFO: [Postgres] Last run: 60ms
INFO: [Postgres] Min time: 55ms
INFO: [Postgres] Max time: 60ms
INFO: [Postgres] Avg time: 56,92ms
INFO: [Postgres] Median: 57,00ms

INFO: [Postgres] SQL: "SELECT
    crash_time,
    COUNT(id) AS total_crashes
FROM crash_data
WHERE crash_time != '00:00:00'
GROUP BY crash_time
ORDER BY total_crashes DESC
LIMIT 1;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 1
INFO: [Postgres] First run: 62ms
INFO: [Postgres] Last run: 74ms
INFO: [Postgres] Min time: 62ms
INFO: [Postgres] Max time: 74ms
INFO: [Postgres] Avg time: 64,22ms
INFO: [Postgres] Median: 64,00ms

INFO: [Postgres] SQL: "SELECT
    id,
    crash_date,
    crash_time,
    (SELECT COUNT(*) FROM crash_data) AS total_crashes_in_table
FROM crash_data;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 900000
INFO: [Postgres] First run: 326ms
INFO: [Postgres] Last run: 617ms
INFO: [Postgres] Min time: 326ms
INFO: [Postgres] Max time: 617ms
INFO: [Postgres] Avg time: 370,38ms
INFO: [Postgres] Median: 357,00ms

INFO: [Postgres] SQL: " SELECT
     borough,
     COUNT(id) AS total_crashes,
     (SELECT MAX(persons_injured)
        FROM crash_data c2
       WHERE c2.borough = c1.borough
     ) AS max_injured,
     (SELECT MAX(crash_date)
        FROM crash_data c3
       WHERE c3.borough = c1.borough
     ) AS most_recent_crash_date,
     (SELECT vehicle_type_1
        FROM crash_data c4
       WHERE c4.borough = c1.borough
       ORDER BY crash_date DESC
       LIMIT 1
     ) AS most_recent_vehicle_type
 FROM crash_data c1
WHERE borough IS NOT NULL
GROUP BY borough
ORDER BY total_crashes DESC;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 5
INFO: [Postgres] First run: 1590ms
INFO: [Postgres] Last run: 1795ms
INFO: [Postgres] Min time: 1590ms
INFO: [Postgres] Max time: 1795ms
INFO: [Postgres] Avg time: 1636,20ms
INFO: [Postgres] Median: 1624,50ms

INFO: [Postgres] SQL: " SELECT
     id,
     crash_date,
     crash_time,
     borough,
     zip_code,
     latitude,
     longitude,
     location,
     on_street_name,
     cross_street_name,
     off_street_name,
     persons_injured,
     persons_killed,
     pedestrians_injured,
     pedestrians_killed,
     cyclists_injured,
     cyclists_killed,
     motorists_injured,
     motorists_killed,
     contributing_factor_1,
     contributing_factor_2,
     contributing_factor_3,
     contributing_factor_4,
     contributing_factor_5,
     vehicle_type_1,
     vehicle_type_2,
     vehicle_type_3,
     vehicle_type_4,
     vehicle_type_5,
     ROUND(latitude, 4) AS rounded_latitude,
     ROUND(longitude, 4) AS rounded_longitude,
     CASE
         WHEN persons_injured > 0 THEN 'Injured'
         ELSE 'No Injuries'
     END AS injury_status,
     LENGTH(location) AS location_length,
     LENGTH(on_street_name) AS on_street_name_length,
     LENGTH(cross_street_name) AS cross_street_name_length,
     UPPER(borough) AS upper_borough,
     CONCAT(on_street_name, ' & ', cross_street_name) AS street_intersection,
     SIN(RADIANS(latitude)) AS sin_latitude,
     COS(RADIANS(longitude)) AS cos_longitude
 FROM crash_data
WHERE borough IN ('BROOKLYN', 'QUEENS', 'MANHATTAN', 'BRONX', 'STATEN ISLAND')
  AND crash_date BETWEEN '2015-01-01' AND '2025-12-31'
  AND persons_injured > 0
  AND zip_code LIKE '1%'
  AND latitude BETWEEN 40.5 AND 41.5
  AND longitude BETWEEN -74.5 AND -73.5
ORDER BY crash_date DESC, crash_time DESC, borough, zip_code;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 160120
INFO: [Postgres] First run: 532ms
INFO: [Postgres] Last run: 625ms
INFO: [Postgres] Min time: 532ms
INFO: [Postgres] Max time: 625ms
INFO: [Postgres] Avg time: 559,54ms
INFO: [Postgres] Median: 558,00ms

INFO: ===== Benchmarking Postgres =====
INFO: ===== Benchmarking Mode: ROUND_ROBIN =====
INFO: [Postgres] SQL: "SELECT *
  FROM crash_data
 WHERE id = 4455765;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 1
INFO: [Postgres] First run: 0ms
INFO: [Postgres] Last run: 1ms
INFO: [Postgres] Min time: 0ms
INFO: [Postgres] Max time: 1ms
INFO: [Postgres] Avg time: 0,02ms
INFO: [Postgres] Median: 0,00ms

INFO: [Postgres] SQL: "SELECT *
  FROM crash_data
 WHERE crash_date BETWEEN '2021-09-01' AND '2021-09-30';
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 9896
INFO: [Postgres] First run: 50ms
INFO: [Postgres] Last run: 71ms
INFO: [Postgres] Min time: 50ms
INFO: [Postgres] Max time: 71ms
INFO: [Postgres] Avg time: 52,82ms
INFO: [Postgres] Median: 52,00ms

INFO: [Postgres] SQL: "SELECT
    COUNT(id) AS total_crashes_2024
FROM crash_data
WHERE EXTRACT(YEAR FROM crash_date) = 2024;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 1
INFO: [Postgres] First run: 58ms
INFO: [Postgres] Last run: 66ms
INFO: [Postgres] Min time: 58ms
INFO: [Postgres] Max time: 66ms
INFO: [Postgres] Avg time: 63,78ms
INFO: [Postgres] Median: 64,00ms

INFO: [Postgres] SQL: "SELECT
    borough,
    COUNT(id) AS total_crashes
FROM crash_data
GROUP BY borough
ORDER BY total_crashes DESC;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 6
INFO: [Postgres] First run: 57ms
INFO: [Postgres] Last run: 77ms
INFO: [Postgres] Min time: 57ms
INFO: [Postgres] Max time: 77ms
INFO: [Postgres] Avg time: 64,60ms
INFO: [Postgres] Median: 64,00ms

INFO: [Postgres] SQL: "SELECT
    crash_time,
    COUNT(id) AS total_crashes
FROM crash_data
WHERE crash_time != '00:00:00'
GROUP BY crash_time
ORDER BY total_crashes DESC
LIMIT 1;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 1
INFO: [Postgres] First run: 64ms
INFO: [Postgres] Last run: 75ms
INFO: [Postgres] Min time: 64ms
INFO: [Postgres] Max time: 75ms
INFO: [Postgres] Avg time: 70,94ms
INFO: [Postgres] Median: 71,00ms

INFO: [Postgres] SQL: "SELECT
    id,
    crash_date,
    crash_time,
    (SELECT COUNT(*) FROM crash_data) AS total_crashes_in_table
FROM crash_data;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 900000
INFO: [Postgres] First run: 332ms
INFO: [Postgres] Last run: 401ms
INFO: [Postgres] Min time: 332ms
INFO: [Postgres] Max time: 401ms
INFO: [Postgres] Avg time: 356,78ms
INFO: [Postgres] Median: 348,00ms

INFO: [Postgres] SQL: " SELECT
     borough,
     COUNT(id) AS total_crashes,
     (SELECT MAX(persons_injured)
        FROM crash_data c2
       WHERE c2.borough = c1.borough
     ) AS max_injured,
     (SELECT MAX(crash_date)
        FROM crash_data c3
       WHERE c3.borough = c1.borough
     ) AS most_recent_crash_date,
     (SELECT vehicle_type_1
        FROM crash_data c4
       WHERE c4.borough = c1.borough
       ORDER BY crash_date DESC
       LIMIT 1
     ) AS most_recent_vehicle_type
 FROM crash_data c1
WHERE borough IS NOT NULL
GROUP BY borough
ORDER BY total_crashes DESC;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 5
INFO: [Postgres] First run: 1578ms
INFO: [Postgres] Last run: 1703ms
INFO: [Postgres] Min time: 1578ms
INFO: [Postgres] Max time: 1703ms
INFO: [Postgres] Avg time: 1619,24ms
INFO: [Postgres] Median: 1612,00ms

INFO: [Postgres] SQL: " SELECT
     id,
     crash_date,
     crash_time,
     borough,
     zip_code,
     latitude,
     longitude,
     location,
     on_street_name,
     cross_street_name,
     off_street_name,
     persons_injured,
     persons_killed,
     pedestrians_injured,
     pedestrians_killed,
     cyclists_injured,
     cyclists_killed,
     motorists_injured,
     motorists_killed,
     contributing_factor_1,
     contributing_factor_2,
     contributing_factor_3,
     contributing_factor_4,
     contributing_factor_5,
     vehicle_type_1,
     vehicle_type_2,
     vehicle_type_3,
     vehicle_type_4,
     vehicle_type_5,
     ROUND(latitude, 4) AS rounded_latitude,
     ROUND(longitude, 4) AS rounded_longitude,
     CASE
         WHEN persons_injured > 0 THEN 'Injured'
         ELSE 'No Injuries'
     END AS injury_status,
     LENGTH(location) AS location_length,
     LENGTH(on_street_name) AS on_street_name_length,
     LENGTH(cross_street_name) AS cross_street_name_length,
     UPPER(borough) AS upper_borough,
     CONCAT(on_street_name, ' & ', cross_street_name) AS street_intersection,
     SIN(RADIANS(latitude)) AS sin_latitude,
     COS(RADIANS(longitude)) AS cos_longitude
 FROM crash_data
WHERE borough IN ('BROOKLYN', 'QUEENS', 'MANHATTAN', 'BRONX', 'STATEN ISLAND')
  AND crash_date BETWEEN '2015-01-01' AND '2025-12-31'
  AND persons_injured > 0
  AND zip_code LIKE '1%'
  AND latitude BETWEEN 40.5 AND 41.5
  AND longitude BETWEEN -74.5 AND -73.5
ORDER BY crash_date DESC, crash_time DESC, borough, zip_code;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 160120
INFO: [Postgres] First run: 521ms
INFO: [Postgres] Last run: 635ms
INFO: [Postgres] Min time: 521ms
INFO: [Postgres] Max time: 635ms
INFO: [Postgres] Avg time: 566,76ms
INFO: [Postgres] Median: 568,00ms

INFO: ===== Benchmarking Postgres =====
INFO: ===== Benchmarking Mode: SEQUENTIAL =====
INFO: [Postgres] SQL: "SELECT *
  FROM crash_data
 WHERE id = 4455765;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 1
INFO: [Postgres] First run: 0ms
INFO: [Postgres] Last run: 1ms
INFO: [Postgres] Min time: 0ms
INFO: [Postgres] Max time: 1ms
INFO: [Postgres] Avg time: 0,08ms
INFO: [Postgres] Median: 0,00ms

INFO: [Postgres] SQL: "SELECT *
  FROM crash_data
 WHERE crash_date BETWEEN '2021-09-01' AND '2021-09-30';
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 9896
INFO: [Postgres] First run: 69ms
INFO: [Postgres] Last run: 82ms
INFO: [Postgres] Min time: 69ms
INFO: [Postgres] Max time: 82ms
INFO: [Postgres] Avg time: 72,46ms
INFO: [Postgres] Median: 72,00ms

INFO: [Postgres] SQL: "SELECT
    COUNT(id) AS total_crashes_2024
FROM crash_data
WHERE EXTRACT(YEAR FROM crash_date) = 2024;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 1
INFO: [Postgres] First run: 100ms
INFO: [Postgres] Last run: 114ms
INFO: [Postgres] Min time: 100ms
INFO: [Postgres] Max time: 114ms
INFO: [Postgres] Avg time: 101,60ms
INFO: [Postgres] Median: 101,00ms

INFO: [Postgres] SQL: "SELECT
    borough,
    COUNT(id) AS total_crashes
FROM crash_data
GROUP BY borough
ORDER BY total_crashes DESC;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 6
INFO: [Postgres] First run: 106ms
INFO: [Postgres] Last run: 112ms
INFO: [Postgres] Min time: 106ms
INFO: [Postgres] Max time: 112ms
INFO: [Postgres] Avg time: 107,64ms
INFO: [Postgres] Median: 107,00ms

INFO: [Postgres] SQL: "SELECT
    crash_time,
    COUNT(id) AS total_crashes
FROM crash_data
WHERE crash_time != '00:00:00'
GROUP BY crash_time
ORDER BY total_crashes DESC
LIMIT 1;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 1
INFO: [Postgres] First run: 117ms
INFO: [Postgres] Last run: 131ms
INFO: [Postgres] Min time: 117ms
INFO: [Postgres] Max time: 131ms
INFO: [Postgres] Avg time: 119,78ms
INFO: [Postgres] Median: 119,50ms

INFO: [Postgres] SQL: "SELECT
    id,
    crash_date,
    crash_time,
    (SELECT COUNT(*) FROM crash_data) AS total_crashes_in_table
FROM crash_data;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 1799999
INFO: [Postgres] First run: 662ms
INFO: [Postgres] Last run: 971ms
INFO: [Postgres] Min time: 662ms
INFO: [Postgres] Max time: 971ms
INFO: [Postgres] Avg time: 724,62ms
INFO: [Postgres] Median: 723,50ms

INFO: [Postgres] SQL: " SELECT
     borough,
     COUNT(id) AS total_crashes,
     (SELECT MAX(persons_injured)
        FROM crash_data c2
       WHERE c2.borough = c1.borough
     ) AS max_injured,
     (SELECT MAX(crash_date)
        FROM crash_data c3
       WHERE c3.borough = c1.borough
     ) AS most_recent_crash_date,
     (SELECT vehicle_type_1
        FROM crash_data c4
       WHERE c4.borough = c1.borough
       ORDER BY crash_date DESC
       LIMIT 1
     ) AS most_recent_vehicle_type
 FROM crash_data c1
WHERE borough IS NOT NULL
GROUP BY borough
ORDER BY total_crashes DESC;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 5
INFO: [Postgres] First run: 2896ms
INFO: [Postgres] Last run: 3116ms
INFO: [Postgres] Min time: 2896ms
INFO: [Postgres] Max time: 3116ms
INFO: [Postgres] Avg time: 2954,04ms
INFO: [Postgres] Median: 2944,50ms

INFO: [Postgres] SQL: " SELECT
     id,
     crash_date,
     crash_time,
     borough,
     zip_code,
     latitude,
     longitude,
     location,
     on_street_name,
     cross_street_name,
     off_street_name,
     persons_injured,
     persons_killed,
     pedestrians_injured,
     pedestrians_killed,
     cyclists_injured,
     cyclists_killed,
     motorists_injured,
     motorists_killed,
     contributing_factor_1,
     contributing_factor_2,
     contributing_factor_3,
     contributing_factor_4,
     contributing_factor_5,
     vehicle_type_1,
     vehicle_type_2,
     vehicle_type_3,
     vehicle_type_4,
     vehicle_type_5,
     ROUND(latitude, 4) AS rounded_latitude,
     ROUND(longitude, 4) AS rounded_longitude,
     CASE
         WHEN persons_injured > 0 THEN 'Injured'
         ELSE 'No Injuries'
     END AS injury_status,
     LENGTH(location) AS location_length,
     LENGTH(on_street_name) AS on_street_name_length,
     LENGTH(cross_street_name) AS cross_street_name_length,
     UPPER(borough) AS upper_borough,
     CONCAT(on_street_name, ' & ', cross_street_name) AS street_intersection,
     SIN(RADIANS(latitude)) AS sin_latitude,
     COS(RADIANS(longitude)) AS cos_longitude
 FROM crash_data
WHERE borough IN ('BROOKLYN', 'QUEENS', 'MANHATTAN', 'BRONX', 'STATEN ISLAND')
  AND crash_date BETWEEN '2015-01-01' AND '2025-12-31'
  AND persons_injured > 0
  AND zip_code LIKE '1%'
  AND latitude BETWEEN 40.5 AND 41.5
  AND longitude BETWEEN -74.5 AND -73.5
ORDER BY crash_date DESC, crash_time DESC, borough, zip_code;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 241315
INFO: [Postgres] First run: 787ms
INFO: [Postgres] Last run: 973ms
INFO: [Postgres] Min time: 787ms
INFO: [Postgres] Max time: 973ms
INFO: [Postgres] Avg time: 871,48ms
INFO: [Postgres] Median: 872,00ms

INFO: ===== Benchmarking Postgres =====
INFO: ===== Benchmarking Mode: ROUND_ROBIN =====
INFO: [Postgres] SQL: "SELECT *
  FROM crash_data
 WHERE id = 4455765;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 1
INFO: [Postgres] First run: 0ms
INFO: [Postgres] Last run: 1ms
INFO: [Postgres] Min time: 0ms
INFO: [Postgres] Max time: 1ms
INFO: [Postgres] Avg time: 0,02ms
INFO: [Postgres] Median: 0,00ms

INFO: [Postgres] SQL: "SELECT *
  FROM crash_data
 WHERE crash_date BETWEEN '2021-09-01' AND '2021-09-30';
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 9896
INFO: [Postgres] First run: 72ms
INFO: [Postgres] Last run: 176ms
INFO: [Postgres] Min time: 72ms
INFO: [Postgres] Max time: 176ms
INFO: [Postgres] Avg time: 78,58ms
INFO: [Postgres] Median: 75,00ms

INFO: [Postgres] SQL: "SELECT
    COUNT(id) AS total_crashes_2024
FROM crash_data
WHERE EXTRACT(YEAR FROM crash_date) = 2024;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 1
INFO: [Postgres] First run: 105ms
INFO: [Postgres] Last run: 124ms
INFO: [Postgres] Min time: 105ms
INFO: [Postgres] Max time: 124ms
INFO: [Postgres] Avg time: 109,92ms
INFO: [Postgres] Median: 109,00ms

INFO: [Postgres] SQL: "SELECT
    borough,
    COUNT(id) AS total_crashes
FROM crash_data
GROUP BY borough
ORDER BY total_crashes DESC;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 6
INFO: [Postgres] First run: 109ms
INFO: [Postgres] Last run: 123ms
INFO: [Postgres] Min time: 109ms
INFO: [Postgres] Max time: 123ms
INFO: [Postgres] Avg time: 116,36ms
INFO: [Postgres] Median: 116,00ms

INFO: [Postgres] SQL: "SELECT
    crash_time,
    COUNT(id) AS total_crashes
FROM crash_data
WHERE crash_time != '00:00:00'
GROUP BY crash_time
ORDER BY total_crashes DESC
LIMIT 1;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 1
INFO: [Postgres] First run: 120ms
INFO: [Postgres] Last run: 141ms
INFO: [Postgres] Min time: 120ms
INFO: [Postgres] Max time: 141ms
INFO: [Postgres] Avg time: 126,66ms
INFO: [Postgres] Median: 126,00ms

INFO: [Postgres] SQL: "SELECT
    id,
    crash_date,
    crash_time,
    (SELECT COUNT(*) FROM crash_data) AS total_crashes_in_table
FROM crash_data;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 1799999
INFO: [Postgres] First run: 657ms
INFO: [Postgres] Last run: 943ms
INFO: [Postgres] Min time: 657ms
INFO: [Postgres] Max time: 943ms
INFO: [Postgres] Avg time: 746,82ms
INFO: [Postgres] Median: 731,50ms

INFO: [Postgres] SQL: " SELECT
     borough,
     COUNT(id) AS total_crashes,
     (SELECT MAX(persons_injured)
        FROM crash_data c2
       WHERE c2.borough = c1.borough
     ) AS max_injured,
     (SELECT MAX(crash_date)
        FROM crash_data c3
       WHERE c3.borough = c1.borough
     ) AS most_recent_crash_date,
     (SELECT vehicle_type_1
        FROM crash_data c4
       WHERE c4.borough = c1.borough
       ORDER BY crash_date DESC
       LIMIT 1
     ) AS most_recent_vehicle_type
 FROM crash_data c1
WHERE borough IS NOT NULL
GROUP BY borough
ORDER BY total_crashes DESC;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 5
INFO: [Postgres] First run: 2901ms
INFO: [Postgres] Last run: 3145ms
INFO: [Postgres] Min time: 2901ms
INFO: [Postgres] Max time: 3145ms
INFO: [Postgres] Avg time: 2968,70ms
INFO: [Postgres] Median: 2959,50ms

INFO: [Postgres] SQL: " SELECT
     id,
     crash_date,
     crash_time,
     borough,
     zip_code,
     latitude,
     longitude,
     location,
     on_street_name,
     cross_street_name,
     off_street_name,
     persons_injured,
     persons_killed,
     pedestrians_injured,
     pedestrians_killed,
     cyclists_injured,
     cyclists_killed,
     motorists_injured,
     motorists_killed,
     contributing_factor_1,
     contributing_factor_2,
     contributing_factor_3,
     contributing_factor_4,
     contributing_factor_5,
     vehicle_type_1,
     vehicle_type_2,
     vehicle_type_3,
     vehicle_type_4,
     vehicle_type_5,
     ROUND(latitude, 4) AS rounded_latitude,
     ROUND(longitude, 4) AS rounded_longitude,
     CASE
         WHEN persons_injured > 0 THEN 'Injured'
         ELSE 'No Injuries'
     END AS injury_status,
     LENGTH(location) AS location_length,
     LENGTH(on_street_name) AS on_street_name_length,
     LENGTH(cross_street_name) AS cross_street_name_length,
     UPPER(borough) AS upper_borough,
     CONCAT(on_street_name, ' & ', cross_street_name) AS street_intersection,
     SIN(RADIANS(latitude)) AS sin_latitude,
     COS(RADIANS(longitude)) AS cos_longitude
 FROM crash_data
WHERE borough IN ('BROOKLYN', 'QUEENS', 'MANHATTAN', 'BRONX', 'STATEN ISLAND')
  AND crash_date BETWEEN '2015-01-01' AND '2025-12-31'
  AND persons_injured > 0
  AND zip_code LIKE '1%'
  AND latitude BETWEEN 40.5 AND 41.5
  AND longitude BETWEEN -74.5 AND -73.5
ORDER BY crash_date DESC, crash_time DESC, borough, zip_code;
"
INFO: [Postgres] Runs: 50
INFO: [Postgres] Timeouts: 0
INFO: [Postgres] Rows returned: 241315
INFO: [Postgres] First run: 777ms
INFO: [Postgres] Last run: 957ms
INFO: [Postgres] Min time: 777ms
INFO: [Postgres] Max time: 957ms
INFO: [Postgres] Avg time: 872,06ms
INFO: [Postgres] Median: 871,00ms
